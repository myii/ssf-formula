# -*- coding: utf-8 -*-
# vim: ft=yaml
---
ssf_node_anchors:
  defaults:
    file: &file_default
      mode: 644
      template: ''
    formula:
      context:
        inspec_suites_kitchen:
          0:
            includes: &includes_NONE
              - []
            inspec_yml:
              supports_debian_ubuntu: &supports_debian_ubuntu
                - debian
                - ubuntu
              # yamllint disable-line rule:line-length
              supports_debian_ubuntu_centos_fedora_opensuse: &supports_debian_ubuntu_centos_fedora_opensuse
                - debian
                - ubuntu
                - centos
                - fedora
                - opensuse
              supports_centos_amazon_oracle: &supports_centos_amazon_oracle
                - centos
                - amazon
                - oracle
              supports_windows_only: &supports_windows_only
                - windows
            provisioner:
              dependencies_epel: &dependencies_epel
                - name: 'epel'
                  repo: 'git'
                  source: 'https://github.com/saltstack-formulas/epel-formula.git'
              # dependencies_files: &dependencies_files
              #   - name: 'files'
              #     path: './test/salt'
              dependencies_states: &dependencies_states
                - name: 'states'
                  path: './test/salt'
              dependencies_files_and_states: &dependencies_files_and_states
                - name: 'files'
                  path: './test/salt'
                - name: 'states'
                  path: './test/salt'
              state_top_salt: &state_top_salt
                - '*':
                    - ._mapdata
                    - .pkgrepo
                    - .master
                    - .minion
            verifier: &verifier_inspec_tests_default
              inspec_tests:
                - default

        platforms_osfamily_debian: &platforms_osfamily_debian
          # [os           ,  os_ver, salt_ver, py_ver]
          - [debian       ,    0   ,      0  ,      0]
          - [ubuntu       ,    0   ,      0  ,      0]
        platforms_osfamily_redhat: &platforms_osfamily_redhat
          # [os           ,  os_ver, salt_ver, py_ver]
          - [centos       ,    0   ,      0  ,      0]
          - [fedora       ,    0   ,      0  ,      0]
          - [amazonlinux  ,    0   ,      0  ,      0]
          - [oraclelinux  ,    0   ,      0  ,      0]
        # yamllint disable-line rule:line-length
        platforms_osfamily_redhat_without_fedora: &platforms_osfamily_redhat_without_fedora
          # [os           ,  os_ver, salt_ver, py_ver]
          - [centos       ,    0   ,      0  ,      0]
          # # - [fedora       ,    0   ,      0  ,      0]
          - [amazonlinux  ,    0   ,      0  ,      0]
          - [oraclelinux  ,    0   ,      0  ,      0]
        # yamllint disable-line rule:line-length
        platforms_osfamily_redhat_without_amazon: &platforms_osfamily_redhat_without_amazon
          # [os           ,  os_ver, salt_ver, py_ver]
          - [centos       ,    0   ,      0  ,      0]
          - [fedora       ,    0   ,      0  ,      0]
          # # - [amazonlinux  ,    0   ,      0  ,      0]
          - [oraclelinux  ,    0   ,      0  ,      0]
        platforms_osfamily_suse: &platforms_osfamily_suse
          # [os           ,  os_ver, salt_ver, py_ver]
          - [opensuse/leap,    0   ,      0  ,      0]
          - [opensuse/tmbl,    0   ,      0  ,      0]
        platforms_os_debian: &platforms_os_debian
          # [os           ,  os_ver, salt_ver, py_ver]
          - [debian       ,    0   ,      0  ,      0]
        platforms_os_ubuntu: &platforms_os_ubuntu
          # [os           ,  os_ver, salt_ver, py_ver]
          - [ubuntu       ,    0   ,      0  ,      0]
        platforms_os_fedora: &platforms_os_fedora
          # [os           ,  os_ver, salt_ver, py_ver]
          - [fedora       ,    0   ,      0  ,      0]
        platforms_os_amazonlinux: &platforms_os_amazonlinux
          # [os           ,  os_ver, salt_ver, py_ver]
          - [amazonlinux  ,    0   ,      0  ,      0]
        platforms_os_arch_base: &platforms_os_arch_base
          # [os           ,  os_ver, salt_ver, py_ver]
          - [arch-base    ,    0   ,      0  ,      0]
        platforms_os_redhat_locale_specific: &platforms_os_redhat_locale_specific
          # [os           ,  os_ver, salt_ver, py_ver]
          # # - [centos       ,    0   ,      0  ,      0]
          - [centos       ,    8   ,      0  ,      0]
          - [fedora       ,    0   ,      0  ,      0]
          - [amazonlinux  ,    0   ,      0  ,      0]
          # # - [oraclelinux  ,    0   ,      0  ,      0]
          - [oraclelinux  ,    8   ,      0  ,      0]
        platforms_os_gentoo: &platforms_os_gentoo
          # [os           ,  os_ver, salt_ver, py_ver]
          - [gentoo/stage3,    0   ,      0  ,      0]
        platforms_os_windows: &platforms_os_windows
          # [os           ,  os_ver, salt_ver, py_ver]
          - [windows      ,    0   ,      0  ,      3]
        platforms_os_freebsd: &platforms_os_freebsd
          # [os           ,  os_ver, salt_ver, py_ver]
          - [freebsd      ,    0   ,      0  ,      3]
        platforms_matrix_osfamily_debian: &platforms_matrix_osfamily_debian
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
        # yamllint disable-line rule:line-length
        platforms_matrix_osfamily_redhat_without_fedora: &platforms_matrix_osfamily_redhat_without_fedora
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [centos       ,    0   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
        # yamllint disable-line rule:line-length
        platforms_matrix_without_arch_and_gentoo: &platforms_matrix_without_arch_and_gentoo
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        # yamllint disable-line rule:line-length
        platforms_matrix_without_arch_and_tumbleweed: &platforms_matrix_without_arch_and_tumbleweed
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        platforms_matrix_without_gentoo: &platforms_matrix_without_gentoo
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        # yamllint disable-line rule:line-length
        platforms_matrix_without_gentoo_non_systemd: &platforms_matrix_without_gentoo_non_systemd
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          - [gentoo/stage3, systemd,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        # yamllint disable-line rule:line-length
        platforms_matrix_without_centos_and_oracle: &platforms_matrix_without_centos_and_oracle
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        platforms_matrix_without_rhel8: &platforms_matrix_without_rhel8
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    7   ,   master,      0,         default]
          - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        # yamllint disable-line rule:line-length
        platforms_matrix_without_rhel8_and_gentoo: &platforms_matrix_without_rhel8_and_gentoo
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    7   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        platforms_matrix_jetbrains: &platforms_matrix_jetbrains
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          - [fedora       ,   32   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    7   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,            arch]
        # yamllint disable-line rule:line-length
        travis_do_not_use_single_job_for_linters: &travis_do_not_use_single_job_for_linters
          use_single_job_for_linters: false
        yamllint:
          rules:
            rule:
              ignore_pillar_example: &ignore_pillar_example
                - pillar.example
              # yamllint disable-line rule:line-length
              ignore_pillar_example_and_with_views_example: &ignore_pillar_example_and_with_views_example
                - pillar.example
                - pillar-with-views.example
      semrel_files: &semrel_files_default
        .github/workflows/commitlint.yml: &file__--github__workflows__commitlint--yml
          <<: *file_default
        .github/workflows/kitchen.yml: &file__--github__workflows__kitchen--yml
          <<: *file_default
          template: 'jinja'
        # yamllint disable-line rule:line-length
        .github/workflows/kitchen.vagrant.yml: &file__--github__workflows__kitchen--vagrant--yml
          <<: *file_default
          template: 'jinja'
        # yamllint disable-line rule:line-length
        .github/workflows/kitchen.windows.yml: &file__--github__workflows__kitchen--windows--yml
          <<: *file_default
          template: 'jinja'
        bin/install-hooks: &file__bin__install-hooks
          <<: *file_default
          mode: 755
        bin/kitchen: &file__bin__kitchen
          <<: *file_default
          mode: 755
        docs/CONTRIBUTING.rst: &file__docs__CONTRIBUTING--rst
          <<: *file_default
        docs/TOFS_pattern.rst: &file__docs__TOFS_pattern--rst
          <<: *file_default
        formula/_mapdata/_mapdata.jinja: &file__formula___mapdata___mapdata--jinja
          <<: *file_default
        formula/_mapdata/init.sls: &file__formula___mapdata___init--sls
          <<: *file_default
          template: 'mako'
        formula/libsaltcli.jinja: &file__formula__libsaltcli--jinja
          <<: *file_default
        formula/libtofs.jinja: &file__formula__libtofs--jinja
          <<: *file_default
        inspec/inspec.yml: &file__inspec__inspec--yml
          <<: *file_default
          template: 'jinja'
        inspec/README.md: &file__inspec__README--md
          <<: *file_default
          template: 'jinja'
        test/integration/share/inspec.yml: &file__test__integration__share__inspec--yml
          <<: *file_default
        test/integration/share/README.md: &file__test__integration__share__README--md
          <<: *file_default
        # yamllint disable rule:line-length
        test/integration/share/libraries/system.rb: &file__test__integration__share__libraries__system--rb
          <<: *file_default
        .gitignore: &file__--gitignore
          <<: *file_default
        .cirrus.yml: &file__--cirrus--yml
          <<: *file_default
          template: 'jinja'
        .gitlab-ci.yml: &file__--gitlab-ci--yml
          <<: *file_default
          template: 'jinja'
        .pre-commit-config.yaml: &file__--pre-commit-config--yaml
          <<: *file_default
          template: 'jinja'
        .rstcheck.cfg: &file__--rstcheck--cfg
          <<: *file_default
        .rubocop.yml: &file__--rubocop--yml
          <<: *file_default
          template: 'jinja'
        .salt-lint: &file__--salt-lint
          <<: *file_default
          template: 'jinja'
        .travis.yml: &file__--travis--yml
          <<: *file_default
          template: 'jinja'
        .yamllint: &file__--yamllint
          <<: *file_default
          template: 'jinja'
        CODEOWNERS: &file__CODEOWNERS
          <<: *file_default
          template: 'jinja'
        commitlint.config.js: &file__commitlint--config--js
          <<: *file_default
        Gemfile: &file__Gemfile
          <<: *file_default
          template: 'jinja'
        Gemfile.lock: &file__Gemfile--lock
          <<: *file_default
        kitchen.yml: &file__kitchen--yml
          <<: *file_default
          template: 'jinja'
        kitchen.vagrant.yml: &file__kitchen--vagrant--yml
          <<: *file_default
          template: 'jinja'
        kitchen.windows.yml: &file__kitchen--windows--yml
          <<: *file_default
          template: 'jinja'
        pre-commit_semantic-release.sh: &file__pre-commit_semantic-release--sh
          <<: *file_default
          mode: 755
        release-rules.js: &file__release-rules--js
          <<: *file_default
        release.config.js: &file__release--config--js
          <<: *file_default
          template: 'jinja'
      semrel_files_inc_map_jinja_verifier: &semrel_files_inc_map_jinja_verifier
        <<: *semrel_files_default
        inspec/controls/_mapdata.rb: &file__inspec__controls___mapdata--rb
          <<: *file_default
          template: 'jinja'

ssf:
  semrel_formulas:
    .github:
      context:
        git:
          github:
            repo: '.github'
        inspec_suites_kitchen: {}
        inspec_suites_matrix: []
        platforms: []
        platforms_matrix: []
      semrel_files:
        .github/workflows/commitlint.yml: *file__--github__workflows__commitlint--yml
        docs/CONTRIBUTING.rst:
          <<: *file__docs__CONTRIBUTING--rst
          dest_file: 'CONTRIBUTING.rst'
    # aegir:
    #   context:
    #     codeowners:
    #       entries:
    #         global:
    #           - '*': '@javierbertoli'
    apache:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'apache-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the apache formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
          1:
            inspec_yml:
              summary: >-
                Verify that the apache formula manages modules correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/modules.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .
                    - .config.modules
                    - .config.certificates
                    - .config.modules.mod_security
                    - .config.modules.server_status
          2: {}
        inspec_suites_matrix:
          - default
          - modules
          - ''
        map_jinja:
          verification:
            import: ['apache']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,   10   ,   master,      3,              '']  # modules
          - [ubuntu       ,    0   ,   master,      0,              '']  # modules
          - [centos       ,    0   ,   master,      0,              '']  # modules
          - [fedora       ,    0   ,   master,      0,              '']  # modules
          - [opensuse/leap,    0   ,   master,      0,              '']  # modules
          - [opensuse/tmbl,    0   ,   master,      0,         default]  # POSSIBLE
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    7   ,   master,      0,              '']  # modules
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         modules]  # POSSIBLE
          - [freebsd      ,    0   ,   master,      3,              '']
        testing_freebsd:
          active: true
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - test/salt/pillar/modules.sls
              - pillar.example
      semrel_files: *semrel_files_default
    apt:
      context:
        codeowners:
          entries:
            global:
              - '*': '@javierbertoli'
        git:
          github:
            repo: 'apt-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the apt repositories are configured correctly
              supports: *supports_debian_ubuntu
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/repositories.pillar.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .repositories
                    - .update
          1:
            inspec_yml:
              summary: >-
                Verify that the apt preferences are configured correctly
              supports: *supports_debian_ubuntu
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/preferences.pillar.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .preferences
          2:
            inspec_yml:
              summary: >-
                Verify that the apt unattended preferences are configured correctly
              supports: *supports_debian_ubuntu
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/unattended.pillar.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .unattended
          3: {}
        inspec_suites_matrix:
          - repositories
          - preferences
          - unattended
          - ''
        map_jinja:
          verification:
            import: ['apt']
        platforms: *platforms_osfamily_debian
        # Based on `*platforms_matrix_osfamily_debian`
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,              '']
          - [ubuntu       ,    0   ,   master,      0,              '']
      semrel_files: *semrel_files_default
    apt-cacher:
      context:
        git:
          github:
            repo: 'apt-cacher-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the apt-cacher formula is setup and configured correctly
              supports: *supports_debian_ubuntu
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/apt-cacher.sls'
              state_top:
                - '*':
                    - .ng._mapdata
                    - .ng.server
                    - .ng.client
        map_jinja:
          dir: '/ng'
          verification:
            import: ['apt_cacher_ng']
        platforms: *platforms_osfamily_debian
        platforms_matrix: *platforms_matrix_osfamily_debian
        use_tofs: true
      semrel_files:
        <<: *semrel_files_default
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          dest_file: 'formula/ng/libtofs.jinja'
    arvados:
      context:
        codeowners:
          entries:
            global:
              - '*': '@javierbertoli'
        git:
          github:
            repo: 'arvados-formula'
        inspec_suites_kitchen:
          0:
            driver:
              hostname: 'fixme.example.net'
            inspec_yml:
              title: 'arvados formula api submodule'
              summary: >-
                Verify that the arvados formula api is setup and configured
                correctly
            provisioner:
              dependencies:
                - name: 'single_host'
                  path: 'test/salt/states/examples'
                - name: 'locale'
                  repo: 'git'
                  source: 'https://github.com/saltstack-formulas/locale-formula.git'
                - name: 'postgres'
                  repo: 'git'
                  source: 'https://github.com/saltstack-formulas/postgres-formula.git'
                - name: 'nginx'
                  repo: 'git'
                  source: 'https://github.com/netmanagers/nginx-formula.git'
              pillars:
                - '*':
                    - .
                    - example_locale
                    - example_postgres
                    - example_nginx
                    - example_nginx_api
                    - example_nginx_websocket
                    - example_nginx_keepweb
                    - example_nginx_controller
                    - '# keepproxy expects to retrieve a list of services from API, so'
                    - '# installing/testing it without an api server running will fail'
                    - example_nginx_keepproxy
              pillars_from_files:
                # yamllint disable rule:line-length
                - '# yamllint disable rule:line-length'
                - .sls: 'test/salt/pillar/arvados.sls'
                - example_locale.sls: 'test/salt/pillar/examples/locale.sls'
                - example_postgres.sls: 'test/salt/pillar/examples/postgresql.sls'
                - example_nginx.sls: 'test/salt/pillar/examples/nginx_passenger.sls'
                - example_nginx_api.sls: 'test/salt/pillar/examples/nginx_api_configuration.sls'
                - example_nginx_websocket.sls: 'test/salt/pillar/examples/nginx_websocket_configuration.sls'
                - example_nginx_keepweb.sls: 'test/salt/pillar/examples/nginx_keepweb_configuration.sls'
                - example_nginx_keepproxy.sls: 'test/salt/pillar/examples/nginx_keepproxy_configuration.sls'
                - example_nginx_controller.sls: 'test/salt/pillar/examples/nginx_controller_configuration.sls'
                - '# yamllint enable rule:line-length'
                # yamllint enable rule:line-length
              state_top:
                - '*':
                    - ._mapdata
                    - single_host.host_entries
                    - single_host.snakeoil_certs
                    - locale
                    - nginx.passenger
                    - postgres
                    - arvados.repo
                    - arvados.api
                    - arvados.websocket
                    - arvados.keepproxy
                    - arvados.keepweb
                    - arvados.controller
                    - arvados.dispatcher
            verifier:
              inspec_tests:
                - .
                - websocket
                - keepproxy
                - keepweb
                - controller
          1:
            driver:
              hostname: 'workbench.fixme.example.net'
            inspec_yml:
              title: 'arvados formula workbench submodule'
              summary: >-
                Verify that the arvados formula workbench is setup and
                configured correctly
            provisioner:
              dependencies:
                - name: 'single_host'
                  path: 'test/salt/states/examples'
                - name: 'nginx'
                  repo: 'git'
                  source: 'https://github.com/netmanagers/nginx-formula.git'
              pillars:
                - '*':
                    - .
                    - example_nginx
                    - example_nginx_workbench
                    - example_nginx_workbench2
              pillars_from_files:
                # yamllint disable rule:line-length
                - '# yamllint disable rule:line-length'
                - .sls: 'test/salt/pillar/arvados.sls'
                - example_nginx.sls: 'test/salt/pillar/examples/nginx_passenger.sls'
                - example_nginx_workbench.sls: 'test/salt/pillar/examples/nginx_workbench_configuration.sls'
                - example_nginx_workbench2.sls: 'test/salt/pillar/examples/nginx_workbench2_configuration.sls'
                - '# yamllint enable rule:line-length'
                # yamllint enable rule:line-length
              state_top:
                - '*':
                    - ._mapdata
                    - single_host.host_entries
                    - single_host.snakeoil_certs
                    - nginx.passenger
                    - arvados.repo
                    - arvados.workbench
                    - arvados.workbench2
            verifier:
              inspec_tests:
                - .
                - workbench2
          2:
            driver:
              hostname: 'shell.fixme.example.net'
            inspec_yml:
              title: 'arvados formula shell submodule'
              summary: >-
                Verify that the arvados formula shell submodule is setup and
                configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/arvados_dev.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - '# We also test repo here. No sense for a whole separate suite'
                    - arvados.repo
                    - arvados.shell
          3:
            driver:
              hostname: 'keep0.fixme.example.net'
            inspec_yml:
              title: 'arvados formula keepstore submodule'
              summary: >-
                Verify that the arvados formula keepstore is setup and
                configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/arvados.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - arvados.repo
                    - arvados.keepstore
                    - '# - arvados.clean'
            verifier:
              inspec_tests:
                - repo
                - keepstore
        inspec_suites_matrix:
          - api
          - workbench
          - shell
          - keepstore
        map_jinja:
          verification:
            import: ['arvados']
        platforms:
          # [os           ,  os_ver, salt_ver, py_ver]
          - [debian       ,    0   ,      0  ,      0]
          - [ubuntu       ,    0   ,      0  ,      0]
          - [centos       ,    0   ,      0  ,      0]
          # # - [fedora       ,    0   ,      0  ,      0]
          # # - [opensuse/leap,    0   ,      0  ,      0]
          # # - [opensuse/tmbl,    0   ,      0  ,      0]
          - [amazonlinux  ,    0   ,      0  ,      0]
          - [oraclelinux  ,    0   ,      0  ,      0]
          # # - [gentoo/stage3,    0   ,      0  ,      0]
          # # - [arch-base    ,    0   ,      0  ,      0]
        platforms_matrix:
          # - failed api-amazonlinux-2-master-py3
          # - failed api-centos-7-master-py3
          # - failed api-centos-8-master-py3
          # - failed api-debian-9-master-py3
          # - failed api-oraclelinux-7-master-py3
          # - failed api-oraclelinux-8-master-py3
          # - failed api-ubuntu-1604-master-py3
          # - failed api-ubuntu-2004-master-py3
          # - failed keepstore-amazonlinux-2-master-py3
          # - failed keepstore-centos-8-master-py3
          # - failed keepstore-debian-9-master-py3
          # - failed keepstore-oraclelinux-8-master-py3
          # - failed keepstore-ubuntu-1604-master-py3
          # - failed keepstore-ubuntu-1804-master-py3
          # - failed keepstore-ubuntu-2004-master-py3
          # - failed shell-amazonlinux-2-master-py3
          # - failed shell-centos-8-master-py3
          # - failed shell-debian-10-master-py3
          # - failed shell-debian-9-master-py3
          # - failed shell-oraclelinux-8-master-py3
          # - failed shell-ubuntu-1604-master-py3
          # - failed shell-ubuntu-1804-master-py3
          # - failed shell-ubuntu-2004-master-py3
          # - failed workbench-amazonlinux-2-master-py3
          # - failed workbench-centos-7-master-py3
          # - failed workbench-centos-8-master-py3
          # - failed workbench-debian-9-master-py3
          # - failed workbench-oraclelinux-7-master-py3
          # - failed workbench-oraclelinux-8-master-py3
          # - failed workbench-ubuntu-1604-master-py3
          # - failed workbench-ubuntu-2004-master-py3
          # - fixable keepstore-oraclelinux-7-master-py3
          # - fixable shell-oraclelinux-7-master-py3
          # - success api-debian-10-master-py3
          # - success api-ubuntu-1804-master-py3
          # - success keepstore-centos-7-master-py3
          # - success keepstore-debian-10-master-py3
          # - success shell-centos-7-master-py3
          # - success workbench-debian-10-master-py3
          # - success workbench-ubuntu-1804-master-py3
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          # # - [debian       ,    0   ,   master,      0,         default]
          - [debian       ,   10   ,   master,      0,             api]
          - [debian       ,   10   ,   master,      0,       workbench]
          - [debian       ,   10   ,   master,      0,       keepstore]
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          - [ubuntu       ,   18.04,   master,      0,             api]
          - [ubuntu       ,   18.04,   master,      0,       workbench]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,           shell]
          - [centos       ,    7   ,   master,      0,       keepstore]
          # # - [fedora       ,    0   ,   master,      0,         default]
          # # - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          # TODO: Submit PR to enable `oraclelinux-7`
          # - [oraclelinux  ,    7   ,   master,      0,           shell]
          # - [oraclelinux  ,    7   ,   master,      0,       keepstore]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.2,      0,         default]
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - test/**/pillar/**/*.sls
      semrel_files: *semrel_files_default
    # bareos:
    #   context:
    #     codeowners:
    #       entries:
    #         global:
    #           - '*': '@javierbertoli'
    bind:
      context:
        codeowners:
          entries:
            global:
              - '*': '@javierbertoli'
        git:
          github:
            repo: 'bind-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the bind formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .
                    - .config
        map_jinja:
          verification:
            import: ['map']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        travis: *travis_do_not_use_single_job_for_linters
        yamllint:
          rules:
            comments-indentation:
              ignore: *ignore_pillar_example_and_with_views_example
            key-duplicates:
              ignore: *ignore_pillar_example
            line-length:
              ignore: *ignore_pillar_example_and_with_views_example
      semrel_files: *semrel_files_default
    cert:
      context:
        git:
          github:
            repo: 'cert-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the cert formula is setup and configured correctly
            provisioner:
              dependencies: *dependencies_files_and_states
              pillars_from_files:
                - .sls: 'test/salt/pillar/managed.sls'
              state_top:
                - '*':
                    - states/setup-certs-to-remove
                    - ._mapdata
                    - .
        map_jinja:
          verification:
            import: ['map']
        platforms_matrix: *platforms_matrix_without_gentoo
        travis: *travis_do_not_use_single_job_for_linters
      semrel_files: *semrel_files_inc_map_jinja_verifier
    chrony:
      context:
        git:
          github:
            repo: 'chrony-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the chrony formula is setup and configured correctly
        map_jinja:
          verification:
            import: ['chrony']
        platforms_matrix: *platforms_matrix_without_centos_and_oracle
        use_tofs: true
      semrel_files: *semrel_files_default
    collectd:
      context:
        git:
          github:
            repo: 'collectd-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the collectd formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar/collectd.sls'
        map_jinja:
          verification:
            import: ['collectd_settings']
        # Based on `*platforms_matrix_without_arch_and_gentoo`
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
      semrel_files: *semrel_files_default
    consul:
      context:
        git:
          github:
            repo: 'consul-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the consul formula is setup and configured correctly
            provisioner:
              pillars:
                - '*':
                    - base
                    - .
              pillars_from_files:
                - base.sls: 'pillar.example'
                - .sls: 'test/salt/pillar/default.sls'
        # TODO: Work out what to do about `consul-template/map.jinja`
        map_jinja:
          verification:
            import: ['consul']
        platforms_matrix: *platforms_matrix_without_gentoo_non_systemd
      semrel_files: *semrel_files_default
    cron:
      context:
        codeowners:
          entries:
            specific_directories:
              - '/./saltcheck-tests/': '@myii'
              - '/test/': '@myii'
        git:
          github:
            repo: 'cron-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the cron formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/cron.sls'
        map_jinja:
          verification:
            import: ['cron']
        platforms_matrix: *platforms_matrix_without_gentoo
      semrel_files: *semrel_files_default
    deepsea:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'deepsea-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the deepsea formula is setup and configured correctly
        map_jinja:
          verification:
            import: ['deepsea']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        use_tofs: true
      semrel_files: *semrel_files_default
    devstack:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'devstack-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the devstack formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/ubuntu.sls'
        inspec_suites_matrix:
          - ubuntu
        map_jinja:
          verification:
            import: ['devstack']
        platforms: *platforms_os_ubuntu
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [ubuntu       ,   18.04,      0  ,      0,          ubuntu]
        use_libsaltcli: true
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - pillar.example
      semrel_files: *semrel_files_default
    dhcpd:
      context:
        codeowners:
          entries:
            global:
              - '*': '@sticky-note'
        git:
          github:
            repo: 'dhcpd-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the dhcpd formula is setup and configured correctly
            provisioner:
              state_top:
                - '*':
                    - ._mapdata
                    - .config
        map_jinja:
          verification:
            import: ['dhcpd']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    7   ,   master,      0,         default]
          - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
      semrel_files: *semrel_files_inc_map_jinja_verifier
    django:
      context:
        git:
          github:
            repo: 'django-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the django formula is setup and configured correctly
            provisioner:
              state_top:
                - '*':
                    - ._mapdata
                    - .pip
        map_jinja:
          verification:
            import: ['django']
        # Based on `*platforms_matrix_without_gentoo`
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          - [fedora       ,   32   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
      semrel_files: *semrel_files_default
    docker:
      context:
        git:
          github:
            repo: 'docker-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the docker formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/archive.sls'
          1:
            inspec_yml:
              summary: >-
                Verify that the docker formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/package.sls'
          2:
            inspec_yml:
              summary: >-
                Verify that the docker formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/archive.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
          3: {}
        inspec_suites_matrix:
          - archive
          - package
          - clean
          - ''
        map_jinja:
          verification:
            import: ['data']
        # Linux testing not working as well on GitLab CI, using GitHub Actions now
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,              '']
          - [ubuntu       ,    0   ,   master,      0,              '']
          - [centos       ,    0   ,   master,      0,              '']
          - [fedora       ,    0   ,   master,      0,              '']
          - [opensuse/leap,    0   ,   master,      0,              '']
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,           clean]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         archive]
          - [amazonlinux  ,    0   ,   master,      0,           clean]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         archive]
          - [oraclelinux  ,    0   ,   master,      0,           clean]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [gentoo/stage3, systemd,   master,      0,         archive]
          - [gentoo/stage3, systemd,   master,      0,           clean]
          - [arch-base    ,    0   ,   3002.5,      0,              '']
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - docker/osfamilymap.yaml
              - docker/osmap.yaml
        use_github_actions: true
      semrel_files: *semrel_files_default
    eclipse:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'eclipse-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the eclipse formula is setup and configured correctly
                (Java package)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/java/pillar.sls'
          1:
            inspec_yml:
              summary: >-
                Verify that the eclipse formula is setup and configured correctly
                (C/C++ package)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/cpp/pillar.sls'
          2:
            inspec_yml:
              summary: >-
                Verify that the eclipse formula is setup and configured correctly
                (Web/JavaScript package)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/javascript/pillar.sls'
        inspec_suites_matrix:
          - java
          - cpp
          - javascript
        map_jinja:
          verification:
            import: ['eclipse']
        # Linux testing no longer working
        platforms_matrix: []
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - eclipse/osfamilymap.yaml
      semrel_files: *semrel_files_default
    epel:
      context:
        git:
          github:
            repo: 'epel-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the epel formula is setup and configured correctly
              supports: *supports_centos_amazon_oracle
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
        map_jinja:
          verification:
            import: ['epel']
        platforms: *platforms_osfamily_redhat_without_fedora
        platforms_matrix: *platforms_matrix_osfamily_redhat_without_fedora
      semrel_files: *semrel_files_default
    exim:
      context:
        git:
          github:
            repo: 'exim-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the exim formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/exim.sls'
        map_jinja:
          verification:
            import: ['exim']
        platforms_matrix: *platforms_matrix_osfamily_debian
        use_tofs: true
      semrel_files: *semrel_files_default
    fail2ban:
      context:
        codeowners:
          entries:
            global:
              - '*': '@javierbertoli'
        git:
          github:
            repo: 'fail2ban-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the fail2ban formula is setup and configured correctly
            provisioner:
              dependencies:
                - name: 'misc'
                  path: 'test/salt/states'
              state_top:
                - '*':
                    - ._mapdata
                    - misc.fake_log_files
                    - .
        map_jinja:
          verification:
            import: ['fail2ban']
        platforms_matrix: *platforms_matrix_without_gentoo_non_systemd
      semrel_files: *semrel_files_default
    firewalld:
      context:
        git:
          github:
            repo: 'firewalld-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the firewalld formula is setup and configured correctly
        map_jinja:
          verification:
            import: ['firewalld']
        # Based on `*platforms_matrix_without_gentoo`
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          # # - [debian       ,    0   ,   master,      0,         default]
          - [debian       ,    9   ,   master,      0,         default]
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          - [ubuntu       ,   18.04,   master,      0,         default]
          - [ubuntu       ,   16.04,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
      semrel_files: *semrel_files_inc_map_jinja_verifier
    golang:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'golang-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the golang formula is setup and configured correctly
                (installation from archive)
          1:
            inspec_yml:
              summary: >-
                Verify that the golang formula is setup and configured correctly
                (installation from package)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/package.sls'
        inspec_suites_matrix:
          - default
          - package
          - ''
        map_jinja:
          verification:
            import: ['golang']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,              '']
          - [ubuntu       ,    0   ,   master,      0,              '']
          # # - [centos       ,    0   ,   master,      0,              '']
          - [centos       ,    8   ,   master,      0,              '']
          - [centos       ,    7   ,   master,      0,         package]
          - [fedora       ,    0   ,   master,      0,              '']
          - [opensuse/leap,    0   ,   master,      0,              '']
          - [opensuse/tmbl,    0   ,   master,      0,              '']
          - [amazonlinux  ,    0   ,   master,      0,              '']
          - [oraclelinux  ,    0   ,   master,      0,              '']
          # # - [gentoo/stage3,    0   ,   master,      0,              '']
          - [arch-base    ,    0   ,   3002.5,      0,              '']
          - [freebsd      ,    0   ,   master,      3,              '']
          - [openbsd      ,    0   ,   3001.1,      3,         package]
          - [windows      ,    0   ,   latest,      3,              '']
        testing_freebsd:
          active: true
        testing_openbsd:
          active: true
        testing_windows:
          active: true
          winrepo_ng: ['golang']
        use_tofs: true
      semrel_files: *semrel_files_default
    grafana:
      context:
        git:
          github:
            repo: 'grafana-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the grafana formula is setup and configured correctly
        map_jinja:
          verification:
            import: ['grafana']
        platforms_matrix: *platforms_matrix_osfamily_debian
        travis: *travis_do_not_use_single_job_for_linters
        use_tofs: true
      semrel_files: *semrel_files_default
    haproxy:
      context:
        codeowners:
          entries:
            global:
              - '*': '@daks'
        git:
          github:
            repo: 'haproxy-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the haproxy formula is setup and configured correctly
            provisioner:
              dependencies:
                - name: 'hosts'
                  path: './test/salt/salt'
              pillars:
                - '*':
                    - hosts
                    - .
              pillars_from_files:
                - hosts.sls: 'test/salt/pillar/hosts.sls'
                - .sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - hosts
                    - .
        map_jinja:
          verification:
            import: ['haproxy']
        platforms_matrix: *platforms_matrix_without_gentoo
        yamllint:
          ignore:
            additional:
              - test/salt/salt/hosts/init.sls
      semrel_files: *semrel_files_default
    hostsfile:
      context:
        git:
          github:
            repo: 'hostsfile-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the hostsfile formula is setup and configured correctly
        # TODO: Find solution where a formula has no `map.jinja`
        map_jinja: {}
      semrel_files: *semrel_files_default
    icinga2:
      context:
        git:
          github:
            repo: 'icinga2-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the icinga2 formula is setup and configured correctly
            provisioner:
              dependencies:
                - name: 'postgres'
                  repo: 'git'
                  source: 'https://github.com/saltstack-formulas/postgres-formula.git'
              pillars:
                - '*':
                    # - postgres
                    - .
              pillars_from_files:
                # - postgres.sls: 'test/salt/pillar/postgres.sls'
                - .sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .icinga-web2
        map_jinja:
          verification:
            import: ['icinga2']
        # Linux testing not working on GitLab CI, so using GitHub Actions
        # Based on `*platforms_matrix_osfamily_debian`
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          - [ubuntu       ,   20.04,   master,      0,         default]
          - [ubuntu       ,   18.04,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          # # - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        use_github_actions: true
        yamllint:
          ignore:
            additional:
              - icinga2/osfamilymap.yaml
      semrel_files: *semrel_files_default
    influxdb:
      context:
        git:
          github:
            repo: 'influxdb-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the influxdb formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/influxdb.sls'
        map_jinja:
          verification:
            import: ['influxdb_settings']
        platforms_matrix: *platforms_matrix_without_arch_and_gentoo
      semrel_files: *semrel_files_default
    iptables:
      context:
        codeowners:
          entries:
            global:
              - '*': '@javierbertoli'
        git:
          github:
            repo: 'iptables-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that iptables is installed and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.pillar.sls'
          1:
            inspec_yml:
              summary: >-
                Verify that iptables is installed and configured using tables defined
                in pillars
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/tables.pillar.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .
                    - .tables
          2: {}
        inspec_suites_matrix:
          - default
          - tables
          - ''
        map_jinja:
          verification:
            import: ['firewall']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,   10   ,   master,      0,         default]
          - [debian       ,    9   ,   master,      0,              '']
          - [ubuntu       ,    0   ,   master,      0,              '']
          - [centos       ,    8   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,              '']
          - [fedora       ,    0   ,   master,      0,              '']
          - [opensuse/leap,    0   ,   master,      0,              '']
          - [opensuse/tmbl,    0   ,   master,      0,              '']
          - [amazonlinux  ,    0   ,   master,      0,              '']
          - [oraclelinux  ,    8   ,   master,      0,         default]
          - [oraclelinux  ,    7   ,   master,      0,              '']
          - [gentoo/stage3,    0   ,   master,      0,              '']
          - [arch-base    ,    0   ,   3002.5,      0,              '']
        yamllint:
          rules:
            key-duplicates:
              ignore: *ignore_pillar_example
      semrel_files: *semrel_files_default
    iscsi:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'iscsi-formula'
        inspec_suites_kitchen:
          0:
            # Removed for now, until CI re-established, was based on:
            # `*platforms_osfamily_redhat` & `*platforms_os_arch_base`
            # excludes:
            inspec_yml:
              summary: >-
                Verify that the iscsi formula is setup and configured correctly
            provisioner:
              dependencies:
                - name: 'lvm'
                  repo: 'git'
                  source: 'https://github.com/saltstack-formulas/lvm-formula.git'
              pillars:
                - '*':
                    - lvm
                    - .
              pillars_from_files:
                - lvm.sls: 'test/salt/pillar/lvm.example'
                - .sls: 'test/salt/pillar/pillar.example'
              state_top:
                - '*':
                    - ._mapdata
                    - lvm.install
                    - lvm.files.create
                    - lvm.pv.create
                    - .
                    - .clean
          1:
            includes: *platforms_osfamily_redhat
            provisioner:
              dependencies:
                - name: 'lvm'
                  repo: 'git'
                  source: 'https://github.com/saltstack-formulas/lvm-formula.git'
              pillars:
                - '*':
                    - lvm
                    - .
              pillars_from_files:
                - lvm.sls: 'test/salt/pillar/lvm.centos'
                - .sls: 'test/salt/pillar/pillar.centos'
              state_top:
                - '*':
                    - ._mapdata
                    - lvm.install
                    - lvm.files.create
                    - lvm.pv.create
                    - .
                    - .clean
            verifier: *verifier_inspec_tests_default
          2:
            includes: *platforms_os_arch_base
            provisioner:
              dependencies:
                - name: 'users'
                  repo: 'git'
                  source: 'https://github.com/saltstack-formulas/users-formula.git'
                - name: 'lvm'
                  repo: 'git'
                  source: 'https://github.com/saltstack-formulas/lvm-formula.git'
              pillars:
                - '*':
                    - users
                    - lvm
                    - .
              pillars_from_files:
                - users.sls: 'test/salt/pillar/users.arch'
                - lvm.sls: 'test/salt/pillar/lvm.example'
                - .sls: 'test/salt/pillar/pillar.arch'
              state_top:
                - '*':
                    - ._mapdata
                    - users
                    - lvm.install
                    - lvm.files.create
                    - lvm.pv.create
                    - .
                    - .clean
            verifier: *verifier_inspec_tests_default
        inspec_suites_matrix:
          - default
          - redhat
          - arch
        map_jinja:
          verification:
            import: ['iscsi']
        # Linux testing no longer working, due to `lvm-formula` dependency
        platforms_matrix: []
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - iscsi/oscodename.yaml
          yaml-files:
            additional:
              - '*.arch'
      semrel_files: *semrel_files_default
    java:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'java-formula'
        inspec_suites_kitchen:
          0:
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/adopt/pillar.sls'
          1:
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/amazon/pillar.sls'
          2:
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/graalvm/pillar.sls'
          3:
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/haikuvm/pillar.sls'
          4:
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/intellij/pillar.sls'
          5:
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/oracle/pillar.sls'
          6:
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/zulu/pillar.sls'
        inspec_suites_matrix:
          - adopt
          - amazon
          - graalvm
          - haikuvm
          - intellij
          - oracle
          - zulu
        map_jinja:
          verification:
            import: ['mapdata']
        platforms_matrix:
          # TODO: Going to need to fix `libcimatrix.jinja` to allow multipe
          #       suites per specific platform
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [ubuntu       ,    0   ,   master,      0,           adopt]
          - [ubuntu       ,    0   ,   master,      0,          amazon]
          - [ubuntu       ,    0   ,   master,      0,         graalvm]
          - [ubuntu       ,    0   ,   master,      0,         haikuvm]
          - [ubuntu       ,    0   ,   master,      0,        intellij]
          # # - [ubuntu       ,    0   ,   master,      0,          oracle]
          - [ubuntu       ,    0   ,   master,      0,            zulu]
        use_libsaltcli: true
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - pillar.example
      semrel_files: *semrel_files_inc_map_jinja_verifier
    jetbrains-appcode:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'jetbrains-appcode-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the appcode formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        map_jinja:
          verification:
            import: ['appcode']
        # No Linux testing yet, `MacOS` formula only (for the time being?)
        platforms_matrix: []
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - appcode/defaults.yaml
      semrel_files:
        <<: *semrel_files_default
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'appcode'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'appcode'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'appcode'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'appcode'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'appcode'
    #     # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
    #     inspec/controls/_mapdata.rb:
    #       <<: *file__inspec__controls___mapdata--rb
    #       alt_semrel_formula: 'appcode'
    jetbrains-clion:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'jetbrains-clion-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the clion formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
          1:
            includes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the clion formula is setup and configured correctly
                (on Arch Linux)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        inspec_suites_matrix:
          - default
          - arch
        map_jinja:
          verification:
            import: ['clion']
        platforms_matrix: *platforms_matrix_jetbrains
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - clion/osfamilymap.yaml
      semrel_files:
        <<: *semrel_files_default
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'clion'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'clion'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'clion'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'clion'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'clion'
    #     # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
    #     inspec/controls/_mapdata.rb:
    #       <<: *file__inspec__controls___mapdata--rb
    #       alt_semrel_formula: 'clion'
    jetbrains-datagrip:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'jetbrains-datagrip-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the datagrip formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
          1:
            includes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the datagrip formula is setup and configured correctly
                (on Arch Linux)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        inspec_suites_matrix:
          - default
          - arch
        map_jinja:
          verification:
            import: ['datagrip']
        platforms_matrix: *platforms_matrix_jetbrains
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - datagrip/osfamilymap.yaml
      semrel_files:
        <<: *semrel_files_default
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'datagrip'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'datagrip'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'datagrip'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'datagrip'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'datagrip'
    #     # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
    #     inspec/controls/_mapdata.rb:
    #       <<: *file__inspec__controls___mapdata--rb
    #       alt_semrel_formula: 'datagrip'
    jetbrains-goland:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'jetbrains-goland-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the goland formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
          1:
            includes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the goland formula is setup and configured correctly
                (on Arch Linux)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        inspec_suites_matrix:
          - default
          - arch
        map_jinja:
          verification:
            import: ['goland']
        platforms_matrix: *platforms_matrix_jetbrains
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - goland/osfamilymap.yaml
      semrel_files:
        <<: *semrel_files_default
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'goland'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'goland'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'goland'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'goland'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'goland'
    #     # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
    #     inspec/controls/_mapdata.rb:
    #       <<: *file__inspec__controls___mapdata--rb
    #       alt_semrel_formula: 'goland'
    jetbrains-intellij:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'jetbrains-intellij-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the intellij formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
          1:
            includes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the intellij formula is setup and configured correctly
                (on Arch Linux)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        inspec_suites_matrix:
          - default
          - arch
        map_jinja:
          verification:
            import: ['intellij']
        # Based on `*platforms_matrix_jetbrains`
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          - [fedora       ,   32   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    7   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,            arch]
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - intellij/osfamilymap.yaml
      semrel_files:
        <<: *semrel_files_default
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'intellij'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'intellij'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'intellij'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'intellij'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'intellij'
    #     # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
    #     inspec/controls/_mapdata.rb:
    #       <<: *file__inspec__controls___mapdata--rb
    #       alt_semrel_formula: 'intellij'
    jetbrains-phpstorm:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'jetbrains-phpstorm-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the phpstorm formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
          1:
            includes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the phpstorm formula is setup and configured correctly
                (on Arch Linux)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        inspec_suites_matrix:
          - default
          - arch
        map_jinja:
          verification:
            import: ['phpstorm']
        platforms_matrix: *platforms_matrix_jetbrains
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - phpstorm/osfamilymap.yaml
      semrel_files:
        <<: *semrel_files_default
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'phpstorm'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'phpstorm'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'phpstorm'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'phpstorm'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'phpstorm'
    #     # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
    #     inspec/controls/_mapdata.rb:
    #       <<: *file__inspec__controls___mapdata--rb
    #       alt_semrel_formula: 'phpstorm'
    jetbrains-pycharm:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'jetbrains-pycharm-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the pycharm formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
          1:
            includes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the pycharm formula is setup and configured correctly
                (on Arch Linux)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        inspec_suites_matrix:
          - default
          - arch
        map_jinja:
          verification:
            import: ['pycharm']
        # No Linux testing now, currently broken in `map.jinja`
        platforms_matrix: []
        # platforms_matrix: *platforms_matrix_jetbrains
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - pycharm/osfamilymap.yaml
      semrel_files:
        <<: *semrel_files_default
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'pycharm'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'pycharm'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'pycharm'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'pycharm'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'pycharm'
    #     # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
    #     inspec/controls/_mapdata.rb:
    #       <<: *file__inspec__controls___mapdata--rb
    #       alt_semrel_formula: 'pycharm'
    jetbrains-resharper:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'jetbrains-resharper-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the resharper formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        map_jinja:
          verification:
            import: ['resharper']
        use_tofs: true
      semrel_files:
        <<: *semrel_files_default
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'resharper'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'resharper'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'resharper'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'resharper'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'resharper'
    #     # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
    #     inspec/controls/_mapdata.rb:
    #       <<: *file__inspec__controls___mapdata--rb
    #       alt_semrel_formula: 'resharper'
    jetbrains-rider:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'jetbrains-rider-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the rider formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
          1:
            includes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the rider formula is setup and configured correctly
                (on Arch Linux)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        inspec_suites_matrix:
          - default
          - arch
        map_jinja:
          verification:
            import: ['rider']
        platforms_matrix: *platforms_matrix_jetbrains
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - rider/osfamilymap.yaml
      semrel_files:
        <<: *semrel_files_default
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'rider'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'rider'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'rider'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'rider'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'rider'
    #     # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
    #     inspec/controls/_mapdata.rb:
    #       <<: *file__inspec__controls___mapdata--rb
    #       alt_semrel_formula: 'rider'
    jetbrains-rubymine:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'jetbrains-rubymine-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the rubymine formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
          1:
            includes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the rubymine formula is setup and configured correctly
                (on Arch Linux)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        inspec_suites_matrix:
          - default
          - arch
        map_jinja:
          verification:
            import: ['rubymine']
        platforms_matrix: *platforms_matrix_jetbrains
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - rubymine/osfamilymap.yaml
      semrel_files:
        <<: *semrel_files_default
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'rubymine'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'rubymine'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'rubymine'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'rubymine'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'rubymine'
    #     # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
    #     inspec/controls/_mapdata.rb:
    #       <<: *file__inspec__controls___mapdata--rb
    #       alt_semrel_formula: 'rubymine'
    jetbrains-webstorm:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'jetbrains-webstorm-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the webstorm formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
          1:
            includes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the webstorm formula is setup and configured correctly
                (on Arch Linux)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        inspec_suites_matrix:
          - default
          - arch
        map_jinja:
          verification:
            import: ['webstorm']
        platforms_matrix: *platforms_matrix_jetbrains
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - webstorm/osfamilymap.yaml
      semrel_files:
        <<: *semrel_files_default
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'webstorm'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'webstorm'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'webstorm'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'webstorm'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'webstorm'
    #     # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
    #     inspec/controls/_mapdata.rb:
    #       <<: *file__inspec__controls___mapdata--rb
    #       alt_semrel_formula: 'webstorm'
    keepalived:
      context:
        git:
          github:
            repo: 'keepalived-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the keepalived formula is setup and configured correctly
        map_jinja:
          verification:
            import: ['keepalived']
        platforms_matrix: *platforms_matrix_without_arch_and_tumbleweed
        # TODO: Find appropriate use of `script_kitchen` & `travis` sections below
        script_kitchen:
          pre:
            - sudo modprobe ip_vs
        travis:
          addons:
            apt:
              packages:
                - ipvsadm
        use_tofs: true
      semrel_files: *semrel_files_default
    letsencrypt:
      context:
        codeowners:
          entries:
            global:
              - '*': '@javierbertoli'
        git:
          github:
            repo: 'letsencrypt-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the letsencrypt formula is setup and configured correctly
                using `git`
            provisioner:
              pillars:
                - '*':
                    - .
              pillars_from_files:
                - .sls: 'test/salt/pillar/git.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .install
                    - .config
          1:
            includes: *platforms_os_debian
            inspec_yml:
              summary: >-
                Verify that the letsencrypt formula is setup and configured correctly
                on Debian
            provisioner:
              dependencies:
                - name: 'apt'
                  repo: 'git'
                  source: 'https://github.com/saltstack-formulas/apt-formula.git'
              pillars:
                - '*':
                    - apt
                    - .
              pillars_from_files:
                - apt.sls: 'test/salt/pillar/apt.sls'
                - .sls: 'test/salt/pillar/deb.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - apt.repositories
                    - apt.preferences
                    - apt.update
                    - .install
                    - .config
          2:
            includes: *platforms_osfamily_redhat
            inspec_yml:
              summary: >-
                Verify that the letsencrypt formula is setup and configured correctly
                on RedHat (and derivatives)
            provisioner:
              pillars:
                - '*':
                    - .
              pillars_from_files:
                - .sls: 'test/salt/pillar/rpm.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .install
                    - .config
        inspec_suites_matrix:
          - git
          - deb
          - rpm
        map_jinja:
          verification:
            import: ['letsencrypt']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,             deb]
          - [ubuntu       ,    0   ,   master,      0,             deb]
          - [centos       ,    0   ,   master,      0,             rpm]
          - [fedora       ,    0   ,   master,      0,             rpm]
          - [opensuse/leap,    0   ,   master,      0,             git]
          - [opensuse/tmbl,    0   ,   master,      0,             git]
          - [amazonlinux  ,    0   ,   master,      0,             rpm]
          # # Should work but failing dependency resolution
          # # - [oraclelinux  ,    0   ,   master,      0,             rpm]
          - [oraclelinux  ,    8   ,   master,      0,             rpm]
          - [gentoo/stage3,    0   ,   master,      0,             git]
          - [arch-base    ,    0   ,   3002.5,      0,             git]
      semrel_files: *semrel_files_default
    libvirt:
      context:
        codeowners:
          entries:
            global:
              - '*': '@baby-gnu'
        git:
          github:
            repo: 'libvirt-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the libvirt formula is setup and configured correctly
              supports: *supports_debian_ubuntu_centos_fedora_opensuse
          1:
            includes:
              # [os           ,  os_ver, salt_ver, py_ver]
              - [debian       ,   10   ,   master,      3]
            inspec_yml:
              summary: >-
                Verify that the libvirt formula can cleanup correctly
              supports: *supports_debian_ubuntu_centos_fedora_opensuse
            provisioner:
              state_top:
                - '*':
                    - ._mapdata
                    - .
                    - .clean
        inspec_suites_matrix:
          - default
          - clean
        map_jinja:
          verification:
            import: ['mapdata']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,   10   ,   master,      3,           clean]
          - [debian       ,    9   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          # Just started failing:
          # - https://gitlab.com/myii/libvirt-formula/-/jobs/1043414281
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          # Can be enabled soon once InSpec packages check is fixed
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        use_libsaltcli: true
        use_tofs: true
      semrel_files: *semrel_files_default
    locale:
      context:
        git:
          github:
            repo: 'locale-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_os_redhat_locale_specific
            inspec_yml:
              summary: >-
                Verify that the locale formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
          1:
            includes: *platforms_os_redhat_locale_specific
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/redhat.sls'
            verifier: *verifier_inspec_tests_default
        inspec_suites_matrix:
          - default
          - redhat
        map_jinja:
          verification:
            import: ['locale']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          - [ubuntu       ,   20.04,   master,      0,         default]
          - [ubuntu       ,   18.04,   master,      0,         default]
          - [centos       ,    8   ,   master,      0,          redhat]
          # RedHat-7 not working with the `redhat` suite, due to packages
          # - `glibc-langpack-de` not available, `glibc-common` is sufficient
          - [centos       ,    7   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,          redhat]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,          redhat]
          - [oraclelinux  ,    8   ,   master,      0,          redhat]
          # Beyond RedHat-7 issues, this doesn't work with the current Kitchen setup
          # because only `en`-based locales are available
          # - https://gitlab.com/myii/locale-formula/-/jobs/1039987126
          # - https://gitlab.com/myii/locale-formula/-/jobs/1040056073
          # # - [oraclelinux  ,    7   ,   master,      0,          redhat]
          - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
      semrel_files: *semrel_files_default
    logrotate:
      context:
        git:
          github:
            repo: 'logrotate-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the logrotate formula is setup and configured correctly
            provisioner:
              dependencies: *dependencies_states
              state_top:
                - 'G@os_family:Suse or G@os_family:Debian':
                    - states.cron
                - '*':
                    - ._mapdata
                    - .
                    - .jobs
        map_jinja:
          verification:
            import: ['logrotate']
      semrel_files: *semrel_files_default
    lvm:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'lvm-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the lvm formula is setup and configured correctly
                (loop4-loop5)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/loop4-loop5/pillar.example'
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
            verifier: *verifier_inspec_tests_default
          1:
            inspec_yml:
              summary: >-
                Verify that the lvm formula is setup and configured correctly
                (loop5-loop6)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/loop5-loop6/pillar.example'
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
            verifier: *verifier_inspec_tests_default
        inspec_suites_matrix:
          - loop4-loop5
          - loop5-loop6
        map_jinja:
          verification:
            import: ['lvm']
        # Linux testing no longer working
        platforms_matrix: []
      semrel_files: *semrel_files_default
    lynis:
      context:
        codeowners:
          entries:
            global:
              - '*': '@n-rodriguez'
        git:
          github:
            repo: 'lynis-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the lynis formula is setup and configured correctly
                (installed using git)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
          1:
            inspec_yml:
              summary: >-
                Verify that the lynis formula is setup and configured correctly
                (installed as a package)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/repo.sls'
          2: {}
        inspec_suites_matrix:
          - default
          - repo
          - ''
        map_jinja:
          verification:
            import: ['lynis']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,              '']
          - [ubuntu       ,    0   ,   master,      0,              '']
          - [centos       ,    0   ,   master,      0,              '']
          - [fedora       ,    0   ,   master,      0,              '']
          - [opensuse/leap,    0   ,   master,      0,              '']
          - [opensuse/tmbl,    0   ,   master,      0,              '']
          - [amazonlinux  ,    0   ,   master,      0,              '']
          - [oraclelinux  ,    0   ,   master,      0,              '']
          - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        use_tofs: true
      semrel_files: *semrel_files_default
    maven:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'maven-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the maven formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
          1:
            includes: *platforms_os_arch_base
            inspec_yml:
              summary: >-
                Verify that the maven formula is setup and configured correctly
                (on Arch Linux)
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        inspec_suites_matrix:
          - default
          - arch
        map_jinja:
          verification:
            import: ['maven']
        platforms_matrix: *platforms_matrix_jetbrains
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - maven/osfamilymap.yaml
      semrel_files: *semrel_files_default
    mongodb:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'mongodb-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the mongodb formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
        map_jinja:
          verification:
            import: ['data']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          - [ubuntu       ,   18.04,   master,      0,         default]
          - [ubuntu       ,   16.04,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          # # - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - pillar.example
              - mongodb/osfamilymap.yaml
              - mongodb/osfingermap.yaml
      semrel_files: *semrel_files_default
    mysql:
      context:
        git:
          github:
            repo: 'mysql-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the mysql formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/mysql.sls'
        map_jinja:
          verification:
            import: ['mysql']
        platforms_matrix: *platforms_matrix_osfamily_debian
        yamllint:
          ignore:
            additional:
              - mysql/supported_sections.yaml
      semrel_files: *semrel_files_default
    nfs:
      context:
        git:
          github:
            repo: 'nfs-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the nfs formula is setup and configured correctly
            provisioner:
              state_top:
                - '*':
                    - ._mapdata
                    - .server
        map_jinja:
          verification:
            import: ['nfs']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          - [ubuntu       ,   20.04,   master,      0,         default]
          - [ubuntu       ,   18.04,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        yamllint:
          ignore:
            additional:
              - nfs/osfamilymap.yaml
      semrel_files: *semrel_files_default
    nginx:
      context:
        codeowners:
          entries:
            global:
              - '*': '@sticky-note'
        git:
          github:
            repo: 'nginx-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the nginx formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar/nginx.sls'
          1:
            # TODO: Other platforms might have packages for `passenger`
            #       Check https://pkgs.org/search/?q=passenger
            includes:
              # [os           ,  os_ver, salt_ver, py_ver]
              - [debian       ,    0   ,      0  ,      0]
              - [ubuntu       ,   20.04,      0  ,      0]
              - [ubuntu       ,   18.04,      0  ,      0]
              - [centos       ,    0   ,      0  ,      0]
              - [oraclelinux  ,    8   ,      0  ,      0]
            inspec_yml:
              summary: >-
                Verify that the nginx formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/passenger/pillar/nginx.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .passenger
          2: {}
        inspec_suites_matrix:
          - default
          - passenger
          - ''
        map_jinja:
          verification:
            import: ['nginx']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,              '']
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          - [ubuntu       ,   20.04,   master,      0,              '']
          - [ubuntu       ,   18.04,   master,      0,              '']
          - [ubuntu       ,   16.04,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,              '']
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    8   ,   master,      0,              '']
          - [oraclelinux  ,    7   ,   master,      0,         default]
          - [gentoo/stage3, systemd,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
          - [freebsd      ,    0   ,   master,      3,         default]
        testing_freebsd:
          active: true
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - test/salt/passenger/pillar/nginx.sls
      semrel_files: *semrel_files_default
    nifi:
      context:
        codeowners:
          entries:
            global:
              - '*': '@codeboyQ2n5ha45'
        git:
          github:
            repo: 'nifi-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the nifi formula is setup and configured correctly
        map_jinja:
          verification:
            import: ['nifi']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          # # - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        use_tofs: true
      semrel_files: *semrel_files_default
    node:
      context:
        git:
          github:
            repo: 'node-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the node formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
          1:
            inspec_yml:
              summary: >-
                Verify that the node formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/archive.sls'
          2:
            inspec_yml:
              summary: >-
                Verify that the node formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/source.sls'
          3:
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/repo.sls'
            verifier: *verifier_inspec_tests_default
        inspec_suites_matrix:
          - default
          - archive
          - source
          - repo
        map_jinja:
          verification:
            import: ['node']
        platforms_matrix:
          # NOTES:
          # - `source` doesn't work anywhere at the moment
          # - `repo` is only for Debian-based platforms
          # - `archive` is the only suite working on `amazonlinux`
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,            repo]
          - [ubuntu       ,    0   ,   master,      0,            repo]
          - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         archive]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        # Use this to start adopting the latest `platforms_matrix`
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - node/osfamilymap.yaml
      semrel_files: *semrel_files_default
    ntp:
      context:
        git:
          github:
            repo: 'ntp-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the ntp formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - .ng._mapdata
                    - .ng
        map_jinja:
          dir: '/ng'
          verification:
            import: ['ntp']
        # https://www.tecmint.com/install-ntp-in-rhel-8/
        # - `ntp` package is no longer supported; use `chronyd` instead
        platforms_matrix: *platforms_matrix_without_rhel8
        yamllint:
          rules:
            key-duplicates:
              ignore: *ignore_pillar_example
      semrel_files: *semrel_files_default
    nut:
      context:
        codeowners:
          entries:
            global:
              - '*': '@javierbertoli'
        git:
          github:
            repo: 'nut-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the nut formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
          1:
            inspec_yml:
              summary: >-
                Verify that the nut services are not started in mode='none'
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/mode-eq-none.sls'
          2: {}
        inspec_suites_matrix:
          - default
          - mode-eq-none
          - ''
        map_jinja:
          verification:
            import: ['nut']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,              '']
          - [ubuntu       ,   20.04,   master,      0,              '']
          - [ubuntu       ,   18.04,   master,      0,              '']
          - [ubuntu       ,   16.04,   master,      0,    mode-eq-none]
          - [centos       ,    0   ,   master,      0,              '']
          - [fedora       ,    0   ,   master,      0,              '']
          - [opensuse/leap,    0   ,   master,      0,              '']
          - [opensuse/tmbl,    0   ,   master,      0,              '']
          - [amazonlinux  ,    0   ,   master,      0,              '']
          - [oraclelinux  ,    0   ,   master,      0,              '']
          - [gentoo/stage3,  latest,   master,      3,    mode-eq-none]
          - [gentoo/stage3, systemd,   master,      0,              '']
          - [arch-base    ,    0   ,   3002.5,      0,              '']
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - test/salt/pillar/default.sls
      semrel_files: *semrel_files_default
    openldap:
      context:
        codeowners:
          entries:
            global:
              - '*': '@sticky-note'
            specific_directories:
              - '/test/': '@myii'
        git:
          github:
            repo: 'openldap-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the openldap formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
        map_jinja:
          verification:
            import: ['openldap']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # Unavailable for `centos-8`
          # https://bugs.centos.org/view.php?id=16959
          # `centos-7`: Docker/Systemd problem:
          #   ... and PID file is not owned by root. Refusing.
          # # - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          # TLS certificates error preventing the service from starting:
          #   Could not get the realpath: No such file or directory
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # Not configured at all for `arch-base`
          # https://wiki.archlinux.org/index.php/OpenLDAP
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
      semrel_files: *semrel_files_default
    openntpd:
      context:
        codeowners:
          entries:
            global:
              - '*': '@n-rodriguez'
        git:
          github:
            repo: 'openntpd-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the openntpd formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/openntpd.sls'
        map_jinja:
          verification:
            import: ['openntpd']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          # # - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
      semrel_files: *semrel_files_inc_map_jinja_verifier
    openssh:
      context:
        git:
          github:
            repo: 'openssh-formula'
        inspec_suites_kitchen:
          0:
            driver:
              hostname: 'example.net'
              vm_hostname: 'example.net'
            inspec_yml:
              summary: >-
                Verify that the openssh formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .config
                    - .known_hosts
        map_jinja:
          verification:
            import: ['mapdata']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.2,      0,         default]
          - [freebsd      ,    0   ,   master,      3,         default]
          - [openbsd      ,    0   ,   3001.1,      3,         default]
        testing_freebsd:
          active: true
        testing_openbsd:
          active: true
        use_libsaltcli: true
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - test/salt/pillar/default.sls
      semrel_files: *semrel_files_inc_map_jinja_verifier
    openvpn:
      context:
        codeowners:
          entries:
            global:
              - '*': '@dafyddj'
        git:
          github:
            repo: 'openvpn-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the openvpn formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .config
        map_jinja:
          verification:
            import: ['mapdata']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          - [ubuntu       ,   20.04,   master,      0,         default]
          - [ubuntu       ,   18.04,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    7   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
          # # TODO: Fix 2 failing states in order to enable this
          # # - [freebsd      ,    0   ,   master,      3,         default]
          - [windows      ,    0   ,   latest,      3,         default]
        testing_freebsd:
          active: true
        testing_windows:
          active: true
          winrepo_ng: ['openvpn']
        use_libsaltcli: true
        yamllint:
          ignore:
            additional:
              - test/salt/pillar/default.sls
      semrel_files: *semrel_files_inc_map_jinja_verifier
    packages:
      context:
        codeowners:
          entries:
            global:
              - '*': '@javierbertoli'
        git:
          github:
            repo: 'packages-formula'
        inspec_suites_kitchen:
          0:
            # None of the platforms use `default` directly
            includes: *includes_NONE
            inspec_yml:
              summary: >-
                Verify that the packages formula is setup and configured correctly
            provisioner:
              pillars_from_files: []
          1:
            includes: *platforms_os_debian
            provisioner:
              dependencies:
                - name: 'node'
                  repo: 'git'
                  source: 'https://github.com/saltstack-formulas/node-formula.git'
              pillars_from_files:
                - .sls: 'test/salt/pillar/debian.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - node
                    - .
            verifier: *verifier_inspec_tests_default
          2:
            includes: *platforms_os_ubuntu
            provisioner:
              dependencies:
                - name: 'golang'
                  repo: 'git'
                  source: 'https://github.com/saltstack-formulas/golang-formula.git'
              pillars_from_files:
                - .sls: 'test/salt/pillar/ubuntu.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - golang.package
                    - .
            verifier: *verifier_inspec_tests_default
          3:
            includes: *platforms_os_fedora
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/fedora.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .
            verifier: *verifier_inspec_tests_default
          4:
            includes:
              # Some of `*platforms_os_centos` + `oraclelinux-8`
              - [centos       ,    8   ,      0  ,      0]
              - [oraclelinux  ,    8   ,      0  ,      0]
            provisioner:
              dependencies: *dependencies_epel
              pillars_from_files:
                - .sls: 'test/salt/pillar/redhat8.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - epel
                    - .
            verifier: *verifier_inspec_tests_default
          5:
            includes:
              # Rest of `*platforms_os_centos`
              - [centos       ,    7   ,      0  ,      0]
              - [oraclelinux  ,    7   ,      0  ,      0]
              - [centos       ,    6   ,      0  ,      0]
            provisioner:
              dependencies: *dependencies_epel
              pillars_from_files:
                - .sls: 'test/salt/pillar/redhat.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - epel
                    - .
            verifier: *verifier_inspec_tests_default
          6:
            includes: *platforms_os_amazonlinux
            provisioner:
              dependencies: *dependencies_epel
              pillars_from_files:
                - .sls: 'test/salt/pillar/amazon.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - epel
                    - .
            verifier: *verifier_inspec_tests_default
          7:
            includes: *platforms_osfamily_suse
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/opensuse.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .
            verifier: *verifier_inspec_tests_default
          8:
            includes: *platforms_os_arch_base
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/arch.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .
            verifier: *verifier_inspec_tests_default
          9:
            includes: *platforms_os_gentoo
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/gentoo.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .
            verifier: *verifier_inspec_tests_default
          10:
            includes: *platforms_os_windows
            inspec_yml:
              summary: >-
                Verify that the packages formula is setup and configured correctly
                (on Windows)
              supports: *supports_windows_only
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/windows.sls'
              state_top:
                - '*':
                    - .chocolatey
        inspec_suites_matrix:
          - default
          - debian
          - ubuntu
          - fedora
          - redhat8
          - centos
          - amazon
          - suse
          - arch
          - gentoo
          - windows
        map_jinja:
          verification:
            import: ['packages']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,          debian]
          # # - [ubuntu       ,    0   ,   master,      0,          ubuntu]
          - [ubuntu       ,   18.04,   master,      0,          ubuntu]
          # # - [centos       ,    0   ,   master,      0,         redhat8]
          - [centos       ,    8   ,   master,      0,         redhat8]
          - [centos       ,    7   ,   master,      0,          centos]
          # # - [fedora       ,    0   ,   master,      0,          fedora]
          - [fedora       ,   32   ,   master,      0,          fedora]
          - [opensuse/leap,    0   ,   master,      0,            suse]
          - [opensuse/tmbl,    0   ,   master,      0,            suse]
          - [amazonlinux  ,    0   ,   master,      0,          amazon]
          # # - [oraclelinux  ,    0   ,   master,      0,         redhat8]
          - [oraclelinux  ,    8   ,   master,      0,         redhat8]
          - [oraclelinux  ,    7   ,   master,      0,          centos]
          - [gentoo/stage3,    0   ,   master,      0,          gentoo]
          - [arch-base    ,    0   ,   3002.5,      0,            arch]
          - [windows      ,    0   ,   latest,      3,         windows]
        testing_windows:
          active: true
      semrel_files: *semrel_files_default
    php:
      context:
        codeowners:
          entries:
            global:
              - '*': '@sticky-note'
        git:
          github:
            repo: 'php-formula'
        inspec_suites_kitchen:
          0:
            # None of the platforms use `default` directly
            includes: *includes_NONE
            inspec_yml:
              summary: >-
                Verify that the php formula is setup and configured correctly
            provisioner:
              pillars_from_files: []
          1:
            includes: *platforms_os_debian
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/debian.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .repo
                    - .fpm.install
                    - .fpm.config
                    - .fpm.pools
                    - .modules
                    - .fpm.service
            verifier: *verifier_inspec_tests_default
          2:
            includes: *platforms_os_ubuntu
            provisioner:
              pillars:
                - '*':
                    - .
                    - ubuntu
              pillars_from_files:
                - .sls: 'test/salt/pillar/debian.sls'
                - ubuntu.sls: 'test/salt/pillar/ubuntu.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .repo
                    - .fpm.install
                    - .fpm.config
                    - .fpm.pools
                    - .modules
                    - .fpm.service
            verifier: *verifier_inspec_tests_default
          3:
            includes: *platforms_osfamily_redhat
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/redhat.sls'
            verifier: *verifier_inspec_tests_default
          4:
            includes: *platforms_osfamily_suse
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/suse.sls'
            verifier: *verifier_inspec_tests_default
          5:
            includes: *platforms_os_freebsd
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/freebsd.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .composer
            verifier: *verifier_inspec_tests_default
        inspec_suites_matrix:
          - default
          - debian
          - ubuntu
          - redhat
          - suse
          - freebsd
        map_jinja:
          verification:
            import: ['php']
        # Based on `*platforms_matrix_without_arch_and_gentoo`
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,          debian]
          - [ubuntu       ,    0   ,   master,      0,          ubuntu]
          - [centos       ,    0   ,   master,      0,          redhat]
          - [fedora       ,    0   ,   master,      0,          redhat]
          - [opensuse/leap,    0   ,   master,      0,            suse]
          - [opensuse/tmbl,    0   ,   master,      0,            suse]
          - [amazonlinux  ,    0   ,   master,      0,          redhat]
          - [oraclelinux  ,    0   ,   master,      0,          redhat]
          # # - [gentoo/stage3,    0   ,   master,      0,          gentoo]
          # # - [arch-base    ,    0   ,   3002.5,      0,            arch]
          - [freebsd      ,    0   ,   master,      3,         freebsd]
        testing_freebsd:
          active: true
        use_tofs: true
      semrel_files: *semrel_files_inc_map_jinja_verifier
    postfix:
      context:
        codeowners:
          entries:
            global:
              - '*': '@fzipi'
        git:
          github:
            repo: 'postfix-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the postfix formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .
                    - .config
        map_jinja:
          verification:
            import: ['postfix']
        yamllint:
          rules:
            key-duplicates:
              ignore: *ignore_pillar_example
      semrel_files: *semrel_files_default
    postgres:
      context:
        codeowners:
          entries:
            global:
              - '*':
                  - '@vutny'
                  - '@myii'
        git:
          github:
            repo: 'postgres-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the postgres formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/postgres.sls'
        map_jinja:
          verification:
            import: ['postgres']
        # Based on `*platforms_matrix_without_gentoo`
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          - [ubuntu       ,   20.04,   master,      0,         default]
          - [ubuntu       ,   18.04,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
          - [freebsd      ,    0   ,   master,      3,         default]
          # # - [openbsd      ,    0   ,   3001.1,      3,         default]
          # # - [windows      ,    0   ,   latest,      3,         default]
        testing_freebsd:
          active: true
        # # Too much work for now (both OpenBSD and Windows)
        # testing_openbsd:
        #   active: true
        # testing_windows:
        #   active: true
        #   winrepo_ng: ['postgresql']
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - pillar.example
              - postgres/codenamemap.yaml
              - postgres/osfamilymap.yaml
              - postgres/osmap.yaml
              - postgres/repo.yaml
              - test/salt/pillar/postgres.sls
      semrel_files: *semrel_files_default
    powerdns:
      context:
        codeowners:
          entries:
            global:
              - '*': '@sticky-note'
        git:
          github:
            repo: 'powerdns-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the powerdns formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .config
                    - .backend-sqlite3
        map_jinja:
          verification:
            import: ['powerdns']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          - [ubuntu       ,   16.04,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          - [fedora       ,   32   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        yamllint:
          ignore:
            additional:
              - sls.example
      semrel_files: *semrel_files_inc_map_jinja_verifier
    proftpd:
      context:
        codeowners:
          entries:
            global:
              - '*': '@n-rodriguez'
        git:
          github:
            repo: 'proftpd-formula'
        inspec_suites_kitchen:
          0:
            # None of the platforms use `default` directly
            includes: *includes_NONE
            inspec_yml:
              summary: >-
                Verify that the proftpd formula is setup and configured correctly
          1:
            includes: *platforms_osfamily_debian
            provisioner:
              pillars:
                - '*':
                    - default
                    - .
              pillars_from_files:
                - default.sls: 'test/salt/pillar/default.sls'
                - .sls: 'test/salt/pillar/debian.sls'
            verifier: *verifier_inspec_tests_default
          2:
            includes: *platforms_osfamily_redhat_without_amazon
            provisioner:
              pillars:
                - '*':
                    - default
                    - .
              pillars_from_files:
                - default.sls: 'test/salt/pillar/default.sls'
                - .sls: 'test/salt/pillar/redhat.sls'
            verifier: *verifier_inspec_tests_default
          3:
            includes: *platforms_osfamily_suse
            provisioner:
              pillars:
                - '*':
                    - default
                    - .
              pillars_from_files:
                - default.sls: 'test/salt/pillar/default.sls'
                - .sls: 'test/salt/pillar/suse.sls'
            verifier: *verifier_inspec_tests_default
          4:
            includes: *platforms_os_amazonlinux
            provisioner:
              dependencies: *dependencies_epel
              pillars:
                - '*':
                    - default
                    - .
              pillars_from_files:
                - default.sls: 'test/salt/pillar/default.sls'
                - .sls: 'test/salt/pillar/redhat.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - epel
                    - .
            verifier: *verifier_inspec_tests_default
          5:
            includes: *platforms_os_gentoo
            provisioner:
              pillars:
                - '*':
                    - default
                    - .
              pillars_from_files:
                - default.sls: 'test/salt/pillar/default.sls'
                - .sls: 'test/salt/pillar/gentoo.sls'
            verifier: *verifier_inspec_tests_default
        inspec_suites_matrix:
          - default
          - debian
          - redhat
          - suse
          - amazonlinux
          - gentoo
        kitchen:
          driver:
            run_options:
              add-host:
                - 'localhost.localdomain:127.0.0.1'
        map_jinja:
          verification:
            import: ['proftpd']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,          debian]
          - [ubuntu       ,    0   ,   master,      0,          debian]
          - [centos       ,    0   ,   master,      0,          redhat]
          - [fedora       ,    0   ,   master,      0,          redhat]
          - [opensuse/leap,    0   ,   master,      0,            suse]
          - [opensuse/tmbl,    0   ,   master,      0,            suse]
          - [amazonlinux  ,    0   ,   master,      0,     amazonlinux]
          - [oraclelinux  ,    0   ,   master,      0,          redhat]
          # Gentoo (OpenRC): Service `proftpd' needs non existent service `net'
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [gentoo/stage3, systemd,   master,      0,          gentoo]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        yamllint:
          ignore:
            additional:
              - test/salt/pillar/redhat.sls
      semrel_files: *semrel_files_default
    prometheus:
      context:
        codeowners:
          entries:
            global:
              - '*':
                  - '@alxwr'
                  - '@noelmcloughlin'
        git:
          github:
            repo: 'prometheus-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the prometheus formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
          1:
            inspec_yml:
              summary: >-
                Verify that the prometheus formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/repo.sls'
          2: {}
        inspec_suites_matrix:
          - default
          - repo
          - ''
        map_jinja:
          verification:
            import: ['prometheus']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,              '']
          - [ubuntu       ,   20.04,   master,      0,              '']
          - [ubuntu       ,   18.04,   master,      0,              '']
          - [ubuntu       ,   16.04,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,              '']
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,              '']
          # TODO: Fix since `centos-8` works
          # - [oraclelinux  ,    8   ,   master,      0,         default]
          # - [oraclelinux  ,    7   ,   master,      0,              '']
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - prometheus/osfamilymap.yaml
              - test/salt/pillar/repo.sls
      semrel_files: *semrel_files_default
    rabbitmq:
      context:
        git:
          github:
            repo: 'rabbitmq-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the rabbitmq formula is setup and configured correctly
            provisioner:
              dependencies: *dependencies_files_and_states
              state_top:
                - '*':
                    - ._mapdata
                    - states.files
                    - .
                    - .config_files
          1:
            provisioner:
              dependencies: *dependencies_files_and_states
              state_top:
                - '*':
                    - ._mapdata
                    - states.files
                    - .latest
                    - .config_files
            verifier: *verifier_inspec_tests_default
        inspec_suites_matrix:
          - default
          - latest
        map_jinja:
          filename: 'package-map.jinja'
          verification:
            import: ['pkgs']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          # # - [debian       ,    0   ,   master,      0,         default]
          - [debian       ,   10   ,   master,      0,          latest]
          - [debian       ,    9   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          - [fedora       ,   33   ,   master,      0,          latest]
          - [fedora       ,   32   ,   master,      0,         default]
          # # - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
      semrel_files: *semrel_files_inc_map_jinja_verifier
    redis:
      context:
        git:
          github:
            repo: 'redis-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the redis formula is setup and configured correctly
            provisioner:
              state_top:
                - '*':
                    - ._mapdata
                    - .common
                    - .server
        map_jinja:
          verification:
            import: ['redis_settings']
        platforms_matrix: *platforms_matrix_without_arch_and_gentoo
      semrel_files: *semrel_files_default
    rkhunter:
      context:
        git:
          github:
            repo: 'rkhunter-formula'
        inspec_suites_kitchen:
          0:
            # None of the platforms use `default` directly
            includes: *includes_NONE
            inspec_yml:
              summary: >-
                Verify that the rkhunter formula is setup and configured correctly
            provisioner:
              pillars_from_files: []
          1:
            includes: *platforms_osfamily_debian
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/debian.sls'
            verifier: *verifier_inspec_tests_default
          2:
            includes: *platforms_osfamily_redhat
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/redhat.sls'
            verifier: *verifier_inspec_tests_default
          3:
            includes: *platforms_osfamily_suse
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/suse.sls'
            verifier: *verifier_inspec_tests_default
        inspec_suites_matrix:
          - default
          - debian
          - redhat
          - suse
        map_jinja:
          verification:
            import: ['rkhunter']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,          debian]
          - [ubuntu       ,    0   ,   master,      0,          debian]
          - [centos       ,    0   ,   master,      0,          redhat]
          - [fedora       ,    0   ,   master,      0,          redhat]
          - [opensuse/leap,    0   ,   master,      0,            suse]
          - [opensuse/tmbl,    0   ,   master,      0,            suse]
          - [amazonlinux  ,    0   ,   master,      0,          redhat]
          - [oraclelinux  ,    0   ,   master,      0,          redhat]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        travis: *travis_do_not_use_single_job_for_linters
        use_tofs: true
      semrel_files: *semrel_files_default
    rng-tools:
      context:
        codeowners:
          entries:
            global:
              - '*': '@n-rodriguez'
        git:
          github:
            repo: 'rng-tools-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the rng-tools formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/rng-tools.sls'
        map_jinja:
          verification:
            import: ['rng_tools']
        use_tofs: true
      semrel_files: *semrel_files_default
    rspamd:
      context:
        codeowners:
          entries:
            global:
              - '*': '@javierbertoli'
        git:
          github:
            repo: 'rspamd-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the Rspamd repositories are configured correctly
        map_jinja:
          verification:
            import: ['rspamd']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          # # - [debian       ,    0   ,   master,      0,         default]
          - [debian       ,   10   ,   master,      0,         default]
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          - [ubuntu       ,   20.04,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          # # - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        yamllint:
          ignore:
            additional:
              - rspamd/osfamilymap.yaml
      semrel_files: *semrel_files_default
    # rundeck:
    #   context:
    #     codeowners:
    #       entries:
    #         global:
    #           - '*': '@sticky-note'
    salt:
      context:
        codeowners:
          entries:
            global:
              - '*': '@saltstack-formulas/wg'
            specific_directories:
              - '/test/': '@myii'
            specific_files:
              - '/./formulas.sls':
                  - '@sticky-note'
                  - '@myii'
              - '/./pin.sls': '@hatifnatt'
        git:
          github:
            repo: 'salt-formula'
        inspec_suites_kitchen:
          0:
            includes:
              # [os           ,  os_ver, salt_ver, py_ver]
              - [0            ,    0   ,   3002.5,      3]
              - [freebsd      ,    0   ,   3002.6,      3]
              - [windows      ,    0   ,   latest,      3]
            inspec_yml:
              summary: >-
                Verify that Salt `v3002-py3` is setup and configured
            provisioner:
              pillars:
                - '*':
                    - .
                    - v3002-py3
              pillars_from_files:
                - .sls: 'test/salt/pillar/salt.sls'
                - v3002-py3.sls: 'test/salt/pillar/v3002-py3.sls'
              state_top: *state_top_salt
          1:
            includes:
              # [os           ,  os_ver, salt_ver, py_ver]
              - [0            ,    0   ,   3001.6,      3]
              - [openbsd      ,    0   ,   3001.1,      3]
            inspec_yml:
              summary: >-
                Verify that Salt `v3001-py3` is setup and configured
            provisioner:
              pillars:
                - '*':
                    - .
                    - v3001-py3
              pillars_from_files:
                - .sls: 'test/salt/pillar/salt.sls'
                - v3001-py3.sls: 'test/salt/pillar/v3001-py3.sls'
              state_top: *state_top_salt
          2:
            includes:
              # [os           ,  os_ver, salt_ver, py_ver]
              - [0            ,    0   ,   3000.8,      3]
            inspec_yml:
              summary: >-
                Verify that Salt `v3000-py3` is setup and configured
            provisioner:
              pillars:
                - '*':
                    - .
                    - v3000-py3
              pillars_from_files:
                - .sls: 'test/salt/pillar/salt.sls'
                - v3000-py3.sls: 'test/salt/pillar/v3000-py3.sls'
              state_top: *state_top_salt
          3:
            includes:
              # [os           ,  os_ver, salt_ver, py_ver]
              - [0            ,    0   ,   3000.8,      2]
            inspec_yml:
              summary: >-
                Verify that Salt `v3000-py2` is setup and configured
            provisioner:
              pillars:
                - '*':
                    - .
                    - v3000-py2
              pillars_from_files:
                - .sls: 'test/salt/pillar/salt.sls'
                - v3000-py2.sls: 'test/salt/pillar/v3000-py2.sls'
              state_top: *state_top_salt
        inspec_suites_matrix:
          - v3002-py3
          - v3001-py3
          - v3000-py3
          - v3000-py2
        map_jinja:
          verification:
            import: ['salt_settings', 'formulas_settings']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,   10   ,   3002.5,      3,       v3002-py3]
          - [debian       ,    9   ,   3002.5,      3,       v3002-py3]
          - [ubuntu       ,   20.04,   3002.5,      3,       v3002-py3]
          - [ubuntu       ,   18.04,   3002.5,      3,       v3002-py3]
          - [ubuntu       ,   16.04,   3002.5,      3,       v3002-py3]
          - [centos       ,    8   ,   3002.5,      3,       v3002-py3]
          - [centos       ,    7   ,   3002.5,      3,       v3002-py3]
          - [fedora       ,   33   ,   3002.5,      3,       v3002-py3]
          # # Still installs `3001.6-1.fc32`
          # # - [fedora       ,   32   ,   3002.5,      3,       v3002-py3]
          # # TODO: Fix when `3002.5` released
          # - [opensuse/leap,   15.2 ,   3002.5,      3,       v3002-py3]
          # - [opensuse/tmbl,  latest,   3002.5,      3,       v3002-py3]
          - [opensuse/leap,   15.2 ,   3002.2,      3,       v3002-py3]
          - [opensuse/tmbl,  latest,   3002.2,      3,       v3002-py3]
          - [amazonlinux  ,    2   ,   3002.5,      3,       v3002-py3]
          - [oraclelinux  ,    8   ,   3002.5,      3,       v3002-py3]
          - [oraclelinux  ,    7   ,   3002.5,      3,       v3002-py3]
          - [arch-base    ,  latest,   3002.5,      3,       v3002-py3]
          - [gentoo/stage3,  latest,   3002.5,      3,       v3002-py3]
          - [gentoo/stage3, systemd,   3002.5,      3,       v3002-py3]
          - [freebsd      ,    0   ,   3002.6,      3,       v3002-py3]
          - [windows      ,    0   ,   latest,      3,       v3002-py3]
          - [debian       ,   10   ,   3001.6,      3,       v3001-py3]
          # - [debian       ,    9   ,   3001.6,      3,       v3001-py3]
          - [ubuntu       ,   20.04,   3001.6,      3,       v3001-py3]
          # - [ubuntu       ,   18.04,   3001.6,      3,       v3001-py3]
          # - [ubuntu       ,   16.04,   3001.6,      3,       v3001-py3]
          - [centos       ,    8   ,   3001.6,      3,       v3001-py3]
          # - [centos       ,    7   ,   3001.6,      3,       v3001-py3]
          # # Probably doesn't work with Python 3.9
          # # - [fedora       ,   33   ,   3001.6,      3,       v3001-py3]
          - [fedora       ,   32   ,   3001.6,      3,       v3001-py3]
          # # Installs `3002.5`
          # # - [opensuse/leap,   15.2 ,   3001.6,      3,       v3001-py3]
          # # - [opensuse/tmbl,  latest,   3001.6,      3,       v3001-py3]
          # - [amazonlinux  ,    2   ,   3001.6,      3,       v3001-py3]
          - [oraclelinux  ,    8   ,   3001.6,      3,       v3001-py3]
          # - [oraclelinux  ,    7   ,   3001.6,      3,       v3001-py3]
          # # - [arch-base    ,  latest,   3001.6,      3,       v3001-py3]
          # - [gentoo/stage3,  latest,   3001.6,      3,       v3001-py3]
          # - [gentoo/stage3, systemd,   3001.6,      3,       v3001-py3]
          - [openbsd      ,    0   ,   3001.1,      3,       v3001-py3]
          # - [debian       ,   10   ,   3000.8,      3,       v3000-py3]
          - [debian       ,    9   ,   3000.8,      3,       v3000-py3]
          - [ubuntu       ,   18.04,   3000.8,      3,       v3000-py3]
          # - [ubuntu       ,   16.04,   3000.8,      3,       v3000-py3]
          # - [centos       ,    8   ,   3000.8,      3,       v3000-py3]
          - [centos       ,    7   ,   3000.8,      3,       v3000-py3]
          # # Installs `3002.5`
          # # - [opensuse/leap,   15.2 ,   3000.8,      3,       v3000-py3]
          # - [amazonlinux  ,    2   ,   3000.8,      3,       v3000-py3]
          # - [oraclelinux  ,    8   ,   3000.8,      3,       v3000-py3]
          - [oraclelinux  ,    7   ,   3000.8,      3,       v3000-py3]
          # - [gentoo/stage3,  latest,   3000.8,      3,       v3000-py3]
          # - [gentoo/stage3, systemd,   3000.8,      3,       v3000-py3]
          # - [ubuntu       ,   18.04,   3000.8,      2,       v3000-py2]
          - [ubuntu       ,   16.04,   3000.8,      2,       v3000-py2]
          # # - [arch-base    ,  latest,   3000.8,      2,       v3000-py2]
        testing_freebsd:
          active: true
        testing_openbsd:
          active: true
        testing_windows:
          active: true
          github:
            platforms:
              provisioner:
                salt_bootstrap_options: '-pythonVersion 3 -version 3002.5'
          winrepo_ng: ['salt-minion-py3']
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - salt/osfamilymap.yaml
              - salt/osmap.yaml
      semrel_files: *semrel_files_inc_map_jinja_verifier
    sqldeveloper:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'sqldeveloper-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the sqldeveloper formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        map_jinja:
          verification:
            import: ['sqldeveloper']
        # No Linux testing yet due to issues with Oracle downloads
        # https://github.com/saltstack-formulas/sqldeveloper-formula/pull/17#issuecomment-638167334
        platforms_matrix: []
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - sqldeveloper/osfamilymap.yaml
      semrel_files: *semrel_files_default
    sqlplus:
      context:
        codeowners:
          entries:
            global:
              - '*': '@noelmcloughlin'
        git:
          github:
            repo: 'sqlplus-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the sqlplus formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/default/pillar.sls'  # TODO: CHANGE
              state_top:
                - '*':
                    - ._mapdata
                    - .clean
                    - .
        map_jinja:
          verification:
            import: ['sqlplus']
        # No Linux testing yet due to issues with Oracle downloads
        # https://github.com/saltstack-formulas/sqlplus-formula/pull/17#issuecomment-638167334
        platforms_matrix: []
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - sqlplus/osfamilymap.yaml
      semrel_files: *semrel_files_default
    ssf:
      context:
        codeowners:
          entries:
            global:
              - '*': '@myii'
            specific_ssf: []
        git:
          github:
            owner: 'myii'
            repo: 'ssf-formula'
          gitlab:
            owner: 'myii'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the ssf formula is setup and configured correctly
        inspec_suites_matrix: []
        map_jinja:
          verification:
            import: ['ssf']
        platforms: []
        platforms_matrix: []
        rubocop:
          AllCops:
            Exclude:
              - 'ssf/files/**/*'
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - ssf/files/default/.cirrus.yml
              - ssf/files/default/.gitlab-ci.yml
              - ssf/files/default/.pre-commit-config.yaml
              - ssf/files/default/.rubocop.yml
              - ssf/files/default/.salt-lint
              - ssf/files/default/.travis.yml
              - ssf/files/default/.yamllint
              - ssf/files/default/inspec/inspec.yml
              - ssf/files/default/kitchen.yml
              - ssf/files/default/kitchen.windows.yml
              - ssf/files/default/.github/workflows/kitchen.yml
              - ssf/files/default/.github/workflows/kitchen.windows.yml
              - ssf/files/tofs_arvados-formula/.travis.yml
              - ssf/files/tofs_ssf-formula/.yamllint
          rules:
            commas:
              ignore:
                - ssf/defaults.yaml
                - ssf/formulas.yaml
      semrel_files:
        .github/workflows/commitlint.yml: *file__--github__workflows__commitlint--yml
        bin/install-hooks: *file__bin__install-hooks
        docs/CONTRIBUTING.rst: *file__docs__CONTRIBUTING--rst
        docs/TOFS_pattern.rst: *file__docs__TOFS_pattern--rst
        formula/libtofs.jinja: *file__formula__libtofs--jinja
        .gitignore: *file__--gitignore
        .gitlab-ci.yml: *file__--gitlab-ci--yml
        .pre-commit-config.yaml: *file__--pre-commit-config--yaml
        .rstcheck.cfg: *file__--rstcheck--cfg
        .rubocop.yml: *file__--rubocop--yml
        .salt-lint: *file__--salt-lint
        .travis.yml: *file__--travis--yml
        .yamllint: *file__--yamllint
        CODEOWNERS: *file__CODEOWNERS
        commitlint.config.js: *file__commitlint--config--js
        Gemfile: *file__Gemfile
        Gemfile.lock: *file__Gemfile--lock
        pre-commit_semantic-release.sh: *file__pre-commit_semantic-release--sh
        release-rules.js: *file__release-rules--js
        release.config.js: *file__release--config--js
    strongswan:
      context:
        codeowners:
          entries:
            global:
              - '*': '@daks'
        git:
          github:
            repo: 'strongswan-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the strongswan formula is setup and configured correctly
        map_jinja:
          verification:
            import: ['strongswan']
        # Gentoo failure:
        #   !!! Multiple package instances within a single package slot have been pulled
        #   !!! into the dependency graph, resulting in a slot conflict:
        #   dev-libs/openssl:0
        platforms_matrix: *platforms_matrix_without_gentoo
        use_tofs: true
      semrel_files: *semrel_files_default
    stunnel:
      context:
        git:
          github:
            repo: 'stunnel-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the stunnel formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/stunnel.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .pillar_certs
                    - .
        map_jinja:
          verification:
            import: ['stunnel']
        platforms_matrix: *platforms_matrix_osfamily_debian
      semrel_files: *semrel_files_default
    sudoers:
      context:
        git:
          github:
            repo: 'sudoers-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the sudoers formula is setup and configured correctly
            provisioner:
              pillars:
                - '*':
                    - kitchen
                    - .
              pillars_from_files:
                - kitchen.sls: 'test/salt/pillar/kitchen.sls'
                - .sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .
                    - .included
        map_jinja:
          verification:
            import: ['sudoers']
      semrel_files: *semrel_files_inc_map_jinja_verifier
    suricata:
      context:
        codeowners:
          entries:
            global:
              - '*': '@alias454'
        git:
          github:
            repo: 'suricata-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the suricata formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
        map_jinja:
          verification:
            import: ['host_lookup']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          # # - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    8   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          # # - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    8   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        yamllint:
          ignore:
            additional:
              - suricata/files/suricata-update.yaml
              - test/salt/pillar/default.sls
              - pillar.example
      semrel_files: *semrel_files_default
    sysctl:
      context:
        codeowners:
          entries:
            global:
              - '*': '@javierbertoli'
        git:
          github:
            repo: 'sysctl-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the sysctl formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/sysctl.sls'
        map_jinja:
          verification:
            import: ['sysctl_settings']
      semrel_files: *semrel_files_default
    syslog-ng:
      context:
        git:
          github:
            repo: 'syslog-ng-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the syslog_ng formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/syslog_ng.sls'
        map_jinja:
          verification:
            import: ['syslog_ng']
        use_tofs: true
        yamllint:
          ignore:
            additional:
              - syslog_ng/osfamilymap.yaml
      semrel_files:
        <<: *semrel_files_default
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'syslog_ng'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'syslog_ng'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'syslog_ng'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'syslog_ng'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'syslog_ng'
    #     # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
    #     inspec/controls/_mapdata.rb:
    #       <<: *file__inspec__controls___mapdata--rb
    #       alt_semrel_formula: 'syslog_ng'
    sysstat:
      context:
        git:
          github:
            repo: 'sysstat-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the sysstat formula is setup and configured correctly
        map_jinja:
          verification:
            import: ['sysstat']
        travis: *travis_do_not_use_single_job_for_linters
        use_tofs: true
      semrel_files: *semrel_files_default
    systemd:
      context:
        git:
          github:
            repo: 'systemd-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the systemd formula is setup and configured correctly
            provisioner:
              dependencies:
                - name: 'rsync_test_package'
                  path: 'test/salt/states'
              state_top:
                - '*':
                    - ._mapdata
                    - .
                    - .networkd
                    - .networkd.profiles
                    - .journald
                    - rsync_test_package
                    - .units
        map_jinja:
          verification:
            import: ['systemd']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          # # - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        use_tofs: true
      semrel_files: *semrel_files_default
    telegraf:
      context:
        git:
          github:
            repo: 'telegraf-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the telegraf formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/telegraf.sls'
        map_jinja:
          verification:
            import: ['telegraf']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]
          - [fedora       ,   32   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        use_tofs: true
      semrel_files: *semrel_files_default
    template:
      context:
        codeowners:
          entries:
            global:
              - '*': '@saltstack-formulas/wg'
        git:
          github:
            repo: 'template-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_os_gentoo
            inspec_yml:
              summary: >-
                Verify that the TEMPLATE formula is setup and configured correctly
            provisioner:
              pillars:
                - '*':
                    - TEMPLATE
                    - define_roles
              pillars_from_files:
                - TEMPLATE.sls: 'pillar.example'
                - define_roles.sls: 'test/salt/pillar/define_roles.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - TEMPLATE
          1:
            includes: *platforms_os_gentoo
            provisioner:
              pillars:
                - '*':
                    - TEMPLATE
                    - gentoo
                    - define_roles
              pillars_from_files:
                - TEMPLATE.sls: 'pillar.example'
                - gentoo.sls: 'test/salt/pillar/gentoo.sls'
                - define_roles.sls: 'test/salt/pillar/define_roles.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - TEMPLATE
            verifier: *verifier_inspec_tests_default
        inspec_suites_matrix:
          - default
          - gentoo
        map_jinja:
          verification:
            import: ['mapdata']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          - [centos       ,    0   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          - [amazonlinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    0   ,   master,      0,         default]
          - [gentoo/stage3,    0   ,   master,      0,          gentoo]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        use_libsaltcli: true
        use_tofs: true
      semrel_files:
        <<: *semrel_files_inc_map_jinja_verifier
        formula/_mapdata/_mapdata.jinja:
          <<: *file__formula___mapdata___mapdata--jinja
          alt_semrel_formula: 'TEMPLATE'
        formula/_mapdata/init.sls:
          <<: *file__formula___mapdata___init--sls
          alt_semrel_formula: 'TEMPLATE'
        formula/libsaltcli.jinja:
          <<: *file__formula__libsaltcli--jinja
          alt_semrel_formula: 'TEMPLATE'
        formula/libtofs.jinja:
          <<: *file__formula__libtofs--jinja
          alt_semrel_formula: 'TEMPLATE'
        inspec/inspec.yml:
          <<: *file__inspec__inspec--yml
          alt_semrel_formula: 'TEMPLATE'
        kitchen.yml:
          <<: *file__kitchen--yml
          alt_semrel_formula: 'TEMPLATE'
        # Overrides for extra files in `*semrel_files_inc_map_jinja_verifier`
        inspec/controls/_mapdata.rb:
          <<: *file__inspec__controls___mapdata--rb
          alt_semrel_formula: 'TEMPLATE'
    timezone:
      context:
        git:
          github:
            repo: 'timezone-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the timezone formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/timezone.sls'
        map_jinja:
          verification:
            import: ['timezone']
      semrel_files: *semrel_files_default
    tomcat:
      context:
        git:
          github:
            repo: 'tomcat-formula'
        inspec_suites_kitchen:
          0:
            driver:
              hostname: 'example.net'
            inspec_yml:
              summary: >-
                Verify that the tomcat formula is setup and configured correctly
            provisioner:
              # pillars_from_files:
              #   - .sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .
                    - .native
                    - .config
                    - .manager
                    - .vhosts
                    - .expires
                    - .context
                    - .cluster
        map_jinja:
          verification:
            import: ['tomcat']
        platforms_matrix: *platforms_matrix_without_rhel8_and_gentoo
        rubocop:
          AllCops:
            Exclude:
              - 'test/integration/**/serverspec/*'
          Cops:
            Lint/EmptyWhen:
              Exclude:
                - 'test/integration/default/controls/config.rb'
        yamllint:
          ignore:
            additional:
              - tomcat/osfamilymap.yaml
      semrel_files: *semrel_files_inc_map_jinja_verifier
    ufw:
      context:
        git:
          github:
            repo: 'ufw-formula'
        inspec_suites_kitchen:
          0:
            includes:
              - [debian       ,   10   ,      0  ,      0]
              - [centos       ,    8   ,      0  ,      0]
              - [oraclelinux  ,    8   ,      0  ,      0]
            inspec_yml:
              summary: >-
                Verify that the ufw formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
          1:
            inspec_yml:
              summary: >-
                Verify that the ufw formula is setup and configured correctly
                (ipv6 disabled)
            provisioner:
              pillars:
                - '*':
                    - .
                    - without-ipv6
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
                - without-ipv6.sls: 'test/salt/pillar/without-ipv6.sls'
            verifier: *verifier_inspec_tests_default
        inspec_suites_matrix:
          - default
          - without-ipv6
        map_jinja:
          verification:
            import: ['ufw']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          # # - [debian       ,    0   ,   master,      0,    without-ipv6]
          - [debian       ,   10   ,   master,      0,         default]
          - [debian       ,    9   ,   master,      0,    without-ipv6]
          - [ubuntu       ,    0   ,   master,      0,    without-ipv6]
          # # - [centos       ,    0   ,   master,      0,    without-ipv6]
          - [centos       ,    8   ,   master,      0,         default]
          - [centos       ,    7   ,   master,      0,    without-ipv6]
          - [fedora       ,    0   ,   master,      0,    without-ipv6]
          - [opensuse/leap,    0   ,   master,      0,    without-ipv6]
          # # - [opensuse/tmbl,    0   ,   master,      0,    without-ipv6]
          - [amazonlinux  ,    0   ,   master,      0,    without-ipv6]
          # # - [oraclelinux  ,    0   ,   master,      0,    without-ipv6]
          - [oraclelinux  ,    8   ,   master,      0,         default]
          - [oraclelinux  ,    7   ,   master,      0,    without-ipv6]
          - [gentoo/stage3,    0   ,   master,      0,    without-ipv6]
          - [arch-base    ,    0   ,   3002.5,      0,    without-ipv6]
        use_tofs: true
      semrel_files: *semrel_files_default
    users:
      context:
        git:
          github:
            repo: 'users-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the users formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
          1:
            inspec_yml:
              summary: >-
                Verify that the `.vimrc` file is configured correctly for
                specified users
            provisioner:
              dependencies:
                - name: 'vim'
                  repo: 'git'
                  source: 'https://github.com/saltstack-formulas/vim-formula.git'
              pillars:
                - '*':
                    - .
                    - vimrc
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
                - vimrc.sls: 'test/salt/pillar/vimrc.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .vimrc
            verifier:
              inspec_tests:
                - default
                - .
        inspec_suites_matrix:
          - default
          - vimrc
        # Based on `*platforms_matrix_without_arch_and_gentoo`
        map_jinja:
          verification:
            import: ['users']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,           vimrc]
          - [ubuntu       ,    0   ,   master,      0,           vimrc]
          - [centos       ,    0   ,   master,      0,           vimrc]
          - [fedora       ,    0   ,   master,      0,           vimrc]
          - [opensuse/leap,    0   ,   master,      0,           vimrc]
          - [opensuse/tmbl,    0   ,   master,      0,           vimrc]
          - [amazonlinux  ,    0   ,   master,      0,           vimrc]
          - [oraclelinux  ,    0   ,   master,      0,           vimrc]
          # # - [gentoo/stage3,    0   ,   master,      0,           vimrc]
          # # - [arch-base    ,    0   ,   3002.5,      0,           vimrc]
      semrel_files: *semrel_files_default
    varnish:
      context:
        git:
          github:
            repo: 'varnish-formula'
        inspec_suites_kitchen:
          0:
            excludes: *platforms_osfamily_suse
            inspec_yml:
              summary: >-
                Verify that the varnish formula is setup and configured correctly
            provisioner:
              pillars:
                - '*':
                    - .
                    - default
              pillars_from_files:
                - .sls: 'test/salt/pillar/varnish.sls'
                - default.sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - .ng._mapdata
                    - .ng
          1:
            includes: *platforms_osfamily_suse
            provisioner:
              pillars:
                - '*':
                    - .
                    - suse
              pillars_from_files:
                - .sls: 'test/salt/pillar/varnish.sls'
                - suse.sls: 'test/salt/pillar/suse.sls'
              state_top:
                - '*':
                    - .ng._mapdata
                    - .ng
            verifier: *verifier_inspec_tests_default
        inspec_suites_matrix:
          - default
          - suse
        map_jinja:
          dir: '/ng'
          verification:
            import: ['varnish_settings']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          # # - [debian       ,    0   ,   master,      0,         default]
          - [debian       ,   10   ,   master,      0,         default]
          # # - [ubuntu       ,    0   ,   master,      0,         default]
          - [ubuntu       ,   20.04,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          - [centos       ,    8   ,   master,      0,         default]
          - [fedora       ,    0   ,   master,      0,         default]
          - [opensuse/leap,    0   ,   master,      0,         default]
          - [opensuse/tmbl,    0   ,   master,      0,         default]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          - [oraclelinux  ,    8   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          - [arch-base    ,    0   ,   3002.5,      0,         default]
        # TODO: Upgrade to latest TOFS in a subsequent PR, since a legacy version
        # is active for the time being (needs to be checked for regressions)
        use_tofs: legacy
      semrel_files: *semrel_files_default
    vault:
      context:
        codeowners:
          entries:
            global:
              - '*': '@dafyddj'
        git:
          github:
            repo: 'vault-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the vault binary is installed correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/install_binary.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .package
          1:
            inspec_yml:
              summary: >-
                Verify that the vault development server is setup and configured
                correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/dev_server.sls'
          2:
            inspec_yml:
              summary: >-
                Verify that the vault production server is setup and configured
                correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/prod_server.sls'
          3: {}
        inspec_suites_matrix:
          # - install_binary
          # - dev_server
          - prod_server
          - ''
        map_jinja:
          verification:
            import: ['vault']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,              '']
          # # - [ubuntu       ,    0   ,   master,      0,              '']
          - [ubuntu       ,   20.04,   master,      0,              '']
          - [ubuntu       ,   18.04,   master,      0,              '']
          - [centos       ,    0   ,   master,      0,              '']
          # # - [fedora       ,    0   ,   master,      0,              '']
          - [fedora       ,   32   ,   master,      0,              '']
          - [opensuse/leap,    0   ,   master,      0,              '']
          - [opensuse/tmbl,    0   ,   master,      0,              '']
          - [amazonlinux  ,    0   ,   master,      0,              '']
          - [oraclelinux  ,    0   ,   master,      0,              '']
          # # - [gentoo/stage3,    0   ,   master,      0,              '']
          - [arch-base    ,    0   ,   3002.5,      0,              '']
      semrel_files: *semrel_files_default
    vim:
      context:
        git:
          github:
            repo: 'vim-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the vim formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/vim.sls'
        map_jinja:
          verification:
            import: ['vim']
      semrel_files: *semrel_files_default
    vsftpd:
      context:
        git:
          github:
            repo: 'vsftpd-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the vsftpd formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/vsftpd.sls'
        map_jinja:
          verification:
            import: ['vsftpd']
        # Gentoo (OpenRC): Service `vsftpd' needs non existent service `net'
        platforms_matrix: *platforms_matrix_without_gentoo_non_systemd
      semrel_files: *semrel_files_default
    zabbix:
      context:
        codeowners:
          entries:
            global:
              - '*': '@hatifnatt'
            specific_directories:
              - '/test/': '@myii'
        git:
          github:
            repo: 'zabbix-formula'
        inspec_suites_kitchen:
          0:
            inspec_yml:
              summary: >-
                Verify that the zabbix formula is setup and configured correctly
            provisioner:
              pillars_from_files:
                - .sls: 'test/salt/pillar/default.sls'
              state_top:
                - '*':
                    - ._mapdata
                    - .agent.repo
                    - .agent.conf
                    - .server.repo
                    - .server.conf
                    - .frontend.repo
                    - .frontend.conf
        map_jinja:
          verification:
            import: ['zabbix']
        platforms_matrix:
          # [os           ,  os_ver, salt_ver, py_ver,    inspec_suite]
          - [debian       ,    0   ,   master,      0,         default]
          - [ubuntu       ,    0   ,   master,      0,         default]
          # # - [centos       ,    0   ,   master,      0,         default]
          # # - [fedora       ,    0   ,   master,      0,         default]  # 33: v5
          - [fedora       ,   32   ,   master,      0,         default]
          # # - [opensuse/leap,    0   ,   master,      0,         default]
          # # - [opensuse/tmbl,    0   ,   master,      0,         default]
          # # - [amazonlinux  ,    0   ,   master,      0,         default]
          # # - [oraclelinux  ,    0   ,   master,      0,         default]
          # # - [gentoo/stage3,    0   ,   master,      0,         default]
          # # - [arch-base    ,    0   ,   3002.5,      0,         default]
        use_tofs: true
        yamllint:
          rules:
            key-duplicates:
              ignore: *ignore_pillar_example
      semrel_files: *semrel_files_default

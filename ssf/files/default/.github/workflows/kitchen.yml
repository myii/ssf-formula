# -*- coding: utf-8 -*-
# vim: ft=yaml
---
{%- from tplroot ~ "/libcimatrix.jinja" import format_ci_matrix with context %}
name: 'Kitchen (Linux)'
'on': ['push', 'pull_request']

jobs:
  kitchen:
    runs-on: 'ubuntu-20.04'
    {%- if semrel_formula == 'docker' %}
    env:
      CHANGE_MINIKUBE_NONE_USER: true
      MINIKUBE_WANTUPDATENOTIFICATION: false
      MINIKUBE_WANTREPORTERRORPROMPT: false
      MINIKUBE_HOME: '$HOME'
      KUBECONFIG: '$HOME/.kube/config'
    {%- endif %}
    strategy:
      fail-fast: false
      matrix:
        instance:
          {{- format_ci_matrix(platforms, inspec_suites_kitchen, inspec_suites_matrix, platforms_matrix, platforms_matrix_allow_failure, platforms_matrix_commented_includes, semrel_formula, width=10, use_github_format=True) }}
    {%- raw %}
    steps:
      - name: 'Check out code'
        uses: 'actions/checkout@v2'
      - name: 'Set up Bundler cache'
        uses: 'actions/cache@v1'
        with:
          path: 'vendor/bundle'
          key: "${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}"
          restore-keys: "${{ runner.os }}-gems-"
      - name: 'Install Bundler'
        run: |
          sudo gem install bundler \
            -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)" \
            --quiet --no-document
      - name: 'Run Bundler'
        run: |
          ruby --version
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: 'Run Test Kitchen'
        run: 'bundle exec kitchen verify ${{ matrix.instance }}'
        env:
          CHEF_LICENSE: 'accept-no-persist'
    {%- endraw %}
